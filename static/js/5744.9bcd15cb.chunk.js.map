{"version":3,"file":"static/js/5744.9bcd15cb.chunk.js","mappings":"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","sources":["../../../node_modules/react-tooltip/node_modules/uuid/dist/esm-browser/rng.js","../../../node_modules/react-tooltip/node_modules/uuid/dist/esm-browser/bytesToUuid.js","../../../node_modules/react-tooltip/node_modules/uuid/dist/esm-browser/v4.js","../../../node_modules/react-tooltip/src/constant.js","../../../node_modules/react-tooltip/src/decorators/staticMethods.js","../../../node_modules/react-tooltip/src/decorators/customEvent.js","../../../node_modules/react-tooltip/src/decorators/bodyMode.js","../../../node_modules/react-tooltip/src/utils/getPosition.js","../../../node_modules/react-tooltip/src/utils/getTipContent.js","../../../node_modules/react-tooltip/src/utils/aria.js","../../../node_modules/react-tooltip/src/utils/nodeListToArray.js","../../../node_modules/react-tooltip/src/decorators/defaultStyles.js","../../../node_modules/react-tooltip/src/decorators/styler.js","../../../node_modules/react-tooltip/src/decorators/trackRemoval.js","../../../node_modules/react-tooltip/src/index.js","../../../node_modules/react-tooltip/src/decorators/windowListener.js","../../../node_modules/react-tooltip/src/decorators/isCapture.js","../../../node_modules/react-tooltip/src/decorators/getEffect.js","../../../node_modules/react-tooltip/src/utils/uuid.js"],"sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n// find the complete implementation of crypto (msCrypto) on IE11.\nvar getRandomValues = typeof crypto != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto != 'undefined' && typeof msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto);\nvar rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\nexport default function rng() {\n  if (!getRandomValues) {\n    throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n  }\n\n  return getRandomValues(rnds8);\n}","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex; // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n\n  return [bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]]].join('');\n}\n\nexport default bytesToUuid;","import rng from './rng.js';\nimport bytesToUuid from './bytesToUuid.js';\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof options == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nexport default v4;","export default {\n  GLOBAL: {\n    HIDE: '__react_tooltip_hide_event',\n    REBUILD: '__react_tooltip_rebuild_event',\n    SHOW: '__react_tooltip_show_event'\n  }\n};\n","/**\n * Static methods for react-tooltip\n */\nimport CONSTANT from '../constant';\n\nconst dispatchGlobalEvent = (eventName, opts) => {\n  // Compatible with IE\n  // @see http://stackoverflow.com/questions/26596123/internet-explorer-9-10-11-event-constructor-doesnt-work\n  // @see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent\n  let event;\n\n  if (typeof window.CustomEvent === 'function') {\n    event = new window.CustomEvent(eventName, { detail: opts });\n  } else {\n    event = document.createEvent('Event');\n    event.initEvent(eventName, false, true, opts);\n  }\n\n  window.dispatchEvent(event);\n};\n\nexport default function(target) {\n  /**\n   * Hide all tooltip\n   * @trigger ReactTooltip.hide()\n   */\n  target.hide = target => {\n    dispatchGlobalEvent(CONSTANT.GLOBAL.HIDE, { target });\n  };\n\n  /**\n   * Rebuild all tooltip\n   * @trigger ReactTooltip.rebuild()\n   */\n  target.rebuild = () => {\n    dispatchGlobalEvent(CONSTANT.GLOBAL.REBUILD);\n  };\n\n  /**\n   * Show specific tooltip\n   * @trigger ReactTooltip.show()\n   */\n  target.show = target => {\n    dispatchGlobalEvent(CONSTANT.GLOBAL.SHOW, { target });\n  };\n\n  target.prototype.globalRebuild = function() {\n    if (this.mount) {\n      this.unbindListener();\n      this.bindListener();\n    }\n  };\n\n  target.prototype.globalShow = function(event) {\n    if (this.mount) {\n      const hasTarget =\n        (event && event.detail && event.detail.target && true) || false;\n      // Create a fake event, specific show will limit the type to `solid`\n      // only `float` type cares e.clientX e.clientY\n      this.showTooltip(\n        { currentTarget: hasTarget && event.detail.target },\n        true\n      );\n    }\n  };\n\n  target.prototype.globalHide = function(event) {\n    if (this.mount) {\n      const hasTarget =\n        (event && event.detail && event.detail.target && true) || false;\n      this.hideTooltip(\n        { currentTarget: hasTarget && event.detail.target },\n        hasTarget\n      );\n    }\n  };\n}\n","/**\n * Custom events to control showing and hiding of tooltip\n *\n * @attributes\n * - `event` {String}\n * - `eventOff` {String}\n */\n\nexport const checkStatus = function(dataEventOff, e) {\n  const { show } = this.state;\n  const { id } = this.props;\n  const isCapture = this.isCapture(e.currentTarget);\n  const currentItem = e.currentTarget.getAttribute('currentItem');\n\n  if (!isCapture) e.stopPropagation();\n  if (show && currentItem === 'true') {\n    if (!dataEventOff) this.hideTooltip(e);\n  } else {\n    e.currentTarget.setAttribute('currentItem', 'true');\n    setUntargetItems(e.currentTarget, this.getTargetArray(id));\n    this.showTooltip(e);\n  }\n};\n\nconst setUntargetItems = function(currentTarget, targetArray) {\n  for (let i = 0; i < targetArray.length; i++) {\n    if (currentTarget !== targetArray[i]) {\n      targetArray[i].setAttribute('currentItem', 'false');\n    } else {\n      targetArray[i].setAttribute('currentItem', 'true');\n    }\n  }\n};\n\nconst customListeners = {\n  id: '9b69f92e-d3fe-498b-b1b4-c5e63a51b0cf',\n  set(target, event, listener) {\n    if (this.id in target) {\n      const map = target[this.id];\n      map[event] = listener;\n    } else {\n      // this is workaround for WeakMap, which is not supported in older browsers, such as IE\n      Object.defineProperty(target, this.id, {\n        configurable: true,\n        value: { [event]: listener }\n      });\n    }\n  },\n  get(target, event) {\n    const map = target[this.id];\n    if (map !== undefined) {\n      return map[event];\n    }\n  }\n};\n\nexport default function(target) {\n  target.prototype.isCustomEvent = function(ele) {\n    const { event } = this.state;\n    return event || !!ele.getAttribute('data-event');\n  };\n\n  /* Bind listener for custom event */\n  target.prototype.customBindListener = function(ele) {\n    const { event, eventOff } = this.state;\n    const dataEvent = ele.getAttribute('data-event') || event;\n    const dataEventOff = ele.getAttribute('data-event-off') || eventOff;\n\n    dataEvent.split(' ').forEach(event => {\n      ele.removeEventListener(event, customListeners.get(ele, event));\n      const customListener = checkStatus.bind(this, dataEventOff);\n      customListeners.set(ele, event, customListener);\n      ele.addEventListener(event, customListener, false);\n    });\n    if (dataEventOff) {\n      dataEventOff.split(' ').forEach(event => {\n        ele.removeEventListener(event, this.hideTooltip);\n        ele.addEventListener(event, this.hideTooltip, false);\n      });\n    }\n  };\n\n  /* Unbind listener for custom event */\n  target.prototype.customUnbindListener = function(ele) {\n    const { event, eventOff } = this.state;\n    const dataEvent = event || ele.getAttribute('data-event');\n    const dataEventOff = eventOff || ele.getAttribute('data-event-off');\n\n    ele.removeEventListener(dataEvent, customListeners.get(ele, event));\n    if (dataEventOff) ele.removeEventListener(dataEventOff, this.hideTooltip);\n  };\n}\n","/**\n * Util method to get effect\n */\nimport { checkStatus } from './customEvent';\n\nconst makeProxy = e => {\n  const proxy = {};\n  for (const key in e) {\n    if (typeof e[key] === 'function') {\n      proxy[key] = e[key].bind(e);\n    } else {\n      proxy[key] = e[key];\n    }\n  }\n  return proxy;\n};\n\nconst bodyListener = function(callback, options, e) {\n  const { respectEffect = false, customEvent = false } = options;\n  const { id } = this.props;\n\n  const tip = e.target.getAttribute('data-tip') || null;\n  const forId = e.target.getAttribute('data-for') || null;\n\n  const target = e.target;\n  if (this.isCustomEvent(target) && !customEvent) {\n    return;\n  }\n\n  const isTargetBelongsToTooltip =\n    (id == null && forId == null) || forId === id;\n\n  if (\n    tip != null &&\n    (!respectEffect || this.getEffect(target) === 'float') &&\n    isTargetBelongsToTooltip\n  ) {\n    const proxy = makeProxy(e);\n    proxy.currentTarget = target;\n    callback(proxy);\n  }\n};\n\nconst findCustomEvents = (targetArray, dataAttribute) => {\n  const events = {};\n  targetArray.forEach(target => {\n    const event = target.getAttribute(dataAttribute);\n    if (event) event.split(' ').forEach(event => (events[event] = true));\n  });\n\n  return events;\n};\n\nconst getBody = () => document.getElementsByTagName('body')[0];\n\nexport default function(target) {\n  target.prototype.isBodyMode = function() {\n    return !!this.props.bodyMode;\n  };\n\n  target.prototype.bindBodyListener = function(targetArray) {\n    const {\n      event,\n      eventOff,\n      possibleCustomEvents,\n      possibleCustomEventsOff\n    } = this.state;\n    const body = getBody();\n\n    const customEvents = findCustomEvents(targetArray, 'data-event');\n    const customEventsOff = findCustomEvents(targetArray, 'data-event-off');\n\n    if (event != null) customEvents[event] = true;\n    if (eventOff != null) customEventsOff[eventOff] = true;\n    possibleCustomEvents\n      .split(' ')\n      .forEach(event => (customEvents[event] = true));\n    possibleCustomEventsOff\n      .split(' ')\n      .forEach(event => (customEventsOff[event] = true));\n\n    this.unbindBodyListener(body);\n\n    const listeners = (this.bodyModeListeners = {});\n    if (event == null) {\n      listeners.mouseover = bodyListener.bind(this, this.showTooltip, {});\n      listeners.mousemove = bodyListener.bind(this, this.updateTooltip, {\n        respectEffect: true\n      });\n      listeners.mouseout = bodyListener.bind(this, this.hideTooltip, {});\n    }\n\n    for (const event in customEvents) {\n      listeners[event] = bodyListener.bind(\n        this,\n        e => {\n          const targetEventOff =\n            e.currentTarget.getAttribute('data-event-off') || eventOff;\n          checkStatus.call(this, targetEventOff, e);\n        },\n        { customEvent: true }\n      );\n    }\n    for (const event in customEventsOff) {\n      listeners[event] = bodyListener.bind(this, this.hideTooltip, {\n        customEvent: true\n      });\n    }\n    for (const event in listeners) {\n      body.addEventListener(event, listeners[event]);\n    }\n  };\n\n  target.prototype.unbindBodyListener = function(body) {\n    body = body || getBody();\n\n    const listeners = this.bodyModeListeners;\n    for (const event in listeners) {\n      body.removeEventListener(event, listeners[event]);\n    }\n  };\n}\n","/**\n * Calculate the position of tooltip\n *\n * @params\n * - `e` {Event} the event of current mouse\n * - `target` {Element} the currentTarget of the event\n * - `node` {DOM} the react-tooltip object\n * - `place` {String} top / right / bottom / left\n * - `effect` {String} float / solid\n * - `offset` {Object} the offset to default position\n *\n * @return {Object}\n * - `isNewState` {Bool} required\n * - `newState` {Object}\n * - `position` {Object} {left: {Number}, top: {Number}}\n */\nexport default function(e, target, node, place, desiredPlace, effect, offset) {\n  const { width: tipWidth, height: tipHeight } = getDimensions(node);\n\n  const { width: targetWidth, height: targetHeight } = getDimensions(target);\n\n  const { mouseX, mouseY } = getCurrentOffset(e, target, effect);\n  const defaultOffset = getDefaultPosition(\n    effect,\n    targetWidth,\n    targetHeight,\n    tipWidth,\n    tipHeight\n  );\n  const { extraOffsetX, extraOffsetY } = calculateOffset(offset);\n\n  const windowWidth = window.innerWidth;\n  const windowHeight = window.innerHeight;\n\n  const { parentTop, parentLeft } = getParent(node);\n\n  // Get the edge offset of the tooltip\n  const getTipOffsetLeft = place => {\n    const offsetX = defaultOffset[place].l;\n    return mouseX + offsetX + extraOffsetX;\n  };\n  const getTipOffsetRight = place => {\n    const offsetX = defaultOffset[place].r;\n    return mouseX + offsetX + extraOffsetX;\n  };\n  const getTipOffsetTop = place => {\n    const offsetY = defaultOffset[place].t;\n    return mouseY + offsetY + extraOffsetY;\n  };\n  const getTipOffsetBottom = place => {\n    const offsetY = defaultOffset[place].b;\n    return mouseY + offsetY + extraOffsetY;\n  };\n\n  //\n  // Functions to test whether the tooltip's sides are inside\n  // the client window for a given orientation p\n  //\n  //  _____________\n  // |             | <-- Right side\n  // | p = 'left'  |\\\n  // |             |/  |\\\n  // |_____________|   |_\\  <-- Mouse\n  //      / \\           |\n  //       |\n  //       |\n  //  Bottom side\n  //\n  const outsideLeft = p => getTipOffsetLeft(p) < 0;\n  const outsideRight = p => getTipOffsetRight(p) > windowWidth;\n  const outsideTop = p => getTipOffsetTop(p) < 0;\n  const outsideBottom = p => getTipOffsetBottom(p) > windowHeight;\n\n  // Check whether the tooltip with orientation p is completely inside the client window\n  const outside = p =>\n    outsideLeft(p) || outsideRight(p) || outsideTop(p) || outsideBottom(p);\n  const inside = p => !outside(p);\n\n  const placesList = ['top', 'bottom', 'left', 'right'];\n  const insideList = [];\n  for (let i = 0; i < 4; i++) {\n    const p = placesList[i];\n    if (inside(p)) {\n      insideList.push(p);\n    }\n  }\n\n  let isNewState = false;\n  let newPlace;\n  const shouldUpdatePlace = desiredPlace !== place;\n  if (inside(desiredPlace) && shouldUpdatePlace) {\n    isNewState = true;\n    newPlace = desiredPlace;\n  } else if (insideList.length > 0 && outside(desiredPlace) && outside(place)) {\n    isNewState = true;\n    newPlace = insideList[0];\n  }\n\n  if (isNewState) {\n    return {\n      isNewState: true,\n      newState: { place: newPlace }\n    };\n  }\n\n  return {\n    isNewState: false,\n    position: {\n      left: parseInt(getTipOffsetLeft(place) - parentLeft, 10),\n      top: parseInt(getTipOffsetTop(place) - parentTop, 10)\n    }\n  };\n}\n\nconst getDimensions = node => {\n  const { height, width } = node.getBoundingClientRect();\n  return {\n    height: parseInt(height, 10),\n    width: parseInt(width, 10)\n  };\n};\n\n// Get current mouse offset\nconst getCurrentOffset = (e, currentTarget, effect) => {\n  const boundingClientRect = currentTarget.getBoundingClientRect();\n  const targetTop = boundingClientRect.top;\n  const targetLeft = boundingClientRect.left;\n  const { width: targetWidth, height: targetHeight } = getDimensions(\n    currentTarget\n  );\n\n  if (effect === 'float') {\n    return {\n      mouseX: e.clientX,\n      mouseY: e.clientY\n    };\n  }\n  return {\n    mouseX: targetLeft + targetWidth / 2,\n    mouseY: targetTop + targetHeight / 2\n  };\n};\n\n// List all possibility of tooltip final offset\n// This is useful in judging if it is necessary for tooltip to switch position when out of window\nconst getDefaultPosition = (\n  effect,\n  targetWidth,\n  targetHeight,\n  tipWidth,\n  tipHeight\n) => {\n  let top;\n  let right;\n  let bottom;\n  let left;\n  const disToMouse = 3;\n  const triangleHeight = 2;\n  const cursorHeight = 12; // Optimize for float bottom only, cause the cursor will hide the tooltip\n\n  if (effect === 'float') {\n    top = {\n      l: -(tipWidth / 2),\n      r: tipWidth / 2,\n      t: -(tipHeight + disToMouse + triangleHeight),\n      b: -disToMouse\n    };\n    bottom = {\n      l: -(tipWidth / 2),\n      r: tipWidth / 2,\n      t: disToMouse + cursorHeight,\n      b: tipHeight + disToMouse + triangleHeight + cursorHeight\n    };\n    left = {\n      l: -(tipWidth + disToMouse + triangleHeight),\n      r: -disToMouse,\n      t: -(tipHeight / 2),\n      b: tipHeight / 2\n    };\n    right = {\n      l: disToMouse,\n      r: tipWidth + disToMouse + triangleHeight,\n      t: -(tipHeight / 2),\n      b: tipHeight / 2\n    };\n  } else if (effect === 'solid') {\n    top = {\n      l: -(tipWidth / 2),\n      r: tipWidth / 2,\n      t: -(targetHeight / 2 + tipHeight + triangleHeight),\n      b: -(targetHeight / 2)\n    };\n    bottom = {\n      l: -(tipWidth / 2),\n      r: tipWidth / 2,\n      t: targetHeight / 2,\n      b: targetHeight / 2 + tipHeight + triangleHeight\n    };\n    left = {\n      l: -(tipWidth + targetWidth / 2 + triangleHeight),\n      r: -(targetWidth / 2),\n      t: -(tipHeight / 2),\n      b: tipHeight / 2\n    };\n    right = {\n      l: targetWidth / 2,\n      r: tipWidth + targetWidth / 2 + triangleHeight,\n      t: -(tipHeight / 2),\n      b: tipHeight / 2\n    };\n  }\n\n  return { top, bottom, left, right };\n};\n\n// Consider additional offset into position calculation\nconst calculateOffset = offset => {\n  let extraOffsetX = 0;\n  let extraOffsetY = 0;\n\n  if (Object.prototype.toString.apply(offset) === '[object String]') {\n    offset = JSON.parse(offset.toString().replace(/'/g, '\"'));\n  }\n  for (const key in offset) {\n    if (key === 'top') {\n      extraOffsetY -= parseInt(offset[key], 10);\n    } else if (key === 'bottom') {\n      extraOffsetY += parseInt(offset[key], 10);\n    } else if (key === 'left') {\n      extraOffsetX -= parseInt(offset[key], 10);\n    } else if (key === 'right') {\n      extraOffsetX += parseInt(offset[key], 10);\n    }\n  }\n\n  return { extraOffsetX, extraOffsetY };\n};\n\n// Get the offset of the parent elements\nconst getParent = currentTarget => {\n  let currentParent = currentTarget;\n  while (currentParent) {\n    const computedStyle = window.getComputedStyle(currentParent);\n    // transform and will-change: transform change the containing block\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_Block\n    if (\n      computedStyle.getPropertyValue('transform') !== 'none' ||\n      computedStyle.getPropertyValue('will-change') === 'transform'\n    )\n      break;\n    currentParent = currentParent.parentElement;\n  }\n\n  const parentTop =\n    (currentParent && currentParent.getBoundingClientRect().top) || 0;\n  const parentLeft =\n    (currentParent && currentParent.getBoundingClientRect().left) || 0;\n\n  return { parentTop, parentLeft };\n};\n","/**\n * To get the tooltip content\n * it may comes from data-tip or this.props.children\n * it should support multiline\n *\n * @params\n * - `tip` {String} value of data-tip\n * - `children` {ReactElement} this.props.children\n * - `multiline` {Any} could be Bool(true/false) or String('true'/'false')\n *\n * @return\n * - String or react component\n */\nimport React from 'react';\n\nexport default function(tip, children, getContent, multiline) {\n  if (children) return children;\n  if (getContent !== undefined && getContent !== null) return getContent; // getContent can be 0, '', etc.\n  if (getContent === null) return null; // Tip not exist and children is null or undefined\n\n  const regexp = /<br\\s*\\/?>/;\n  if (!multiline || multiline === 'false' || !regexp.test(tip)) {\n    // No trim(), so that user can keep their input\n    return tip;\n  }\n\n  // Multiline tooltip content\n  return tip.split(regexp).map((d, i) => {\n    return (\n      <span key={i} className=\"multi-line\">\n        {d}\n      </span>\n    );\n  });\n}\n","/**\n * Support aria- and role in ReactTooltip\n *\n * @params props {Object}\n * @return {Object}\n */\nexport function parseAria(props) {\n  const ariaObj = {};\n  Object.keys(props)\n    .filter(prop => {\n      // aria-xxx and role is acceptable\n      return /(^aria-\\w+$|^role$)/.test(prop);\n    })\n    .forEach(prop => {\n      ariaObj[prop] = props[prop];\n    });\n\n  return ariaObj;\n}\n","/**\n * Convert nodelist to array\n * @see https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/core/createArrayFromMixed.js#L24\n * NodeLists are functions in Safari\n */\n\nexport default function(nodeList) {\n  const length = nodeList.length;\n  if (nodeList.hasOwnProperty) {\n    return Array.prototype.slice.call(nodeList);\n  }\n  return new Array(length).fill().map(index => nodeList[index]);\n}\n","/**\n * Default pop-up style values (text color, background color).\n */\nconst defaultColors = {\n  dark: {\n    text: '#fff',\n    background: '#222',\n    border: 'transparent',\n    arrow: '#222'\n  },\n  success: {\n    text: '#fff',\n    background: '#8DC572',\n    border: 'transparent',\n    arrow: '#8DC572'\n  },\n  warning: {\n    text: '#fff',\n    background: '#F0AD4E',\n    border: 'transparent',\n    arrow: '#F0AD4E'\n  },\n  error: {\n    text: '#fff',\n    background: '#BE6464',\n    border: 'transparent',\n    arrow: '#BE6464'\n  },\n  info: {\n    text: '#fff',\n    background: '#337AB7',\n    border: 'transparent',\n    arrow: '#337AB7'\n  },\n  light: {\n    text: '#222',\n    background: '#fff',\n    border: 'transparent',\n    arrow: '#fff'\n  }\n};\n\nexport function getDefaultPopupColors(type) {\n  return defaultColors[type] ? { ...defaultColors[type] } : undefined;\n}\n","import { getDefaultPopupColors } from './defaultStyles';\n\n/**\n * Generates the specific tooltip style for use on render.\n */\nexport function generateTooltipStyle(uuid, customColors, type, hasBorder) {\n  return generateStyle(uuid, getPopupColors(customColors, type, hasBorder));\n}\n\n/**\n * Generates the tooltip style rules based on the element-specified \"data-type\" property.\n */\nfunction generateStyle(uuid, colors) {\n  const textColor = colors.text;\n  const backgroundColor = colors.background;\n  const borderColor = colors.border;\n  const arrowColor = colors.arrow;\n\n  return `\n  \t.${uuid} {\n\t    color: ${textColor};\n\t    background: ${backgroundColor};\n\t    border: 1px solid ${borderColor};\n  \t}\n\n  \t.${uuid}.place-top {\n        margin-top: -10px;\n    }\n    .${uuid}.place-top::before {\n        border-top: 8px solid ${borderColor};\n    }\n    .${uuid}.place-top::after {\n        border-left: 8px solid transparent;\n        border-right: 8px solid transparent;\n        bottom: -6px;\n        left: 50%;\n        margin-left: -8px;\n        border-top-color: ${arrowColor};\n        border-top-style: solid;\n        border-top-width: 6px;\n    }\n\n    .${uuid}.place-bottom {\n        margin-top: 10px;\n    }\n    .${uuid}.place-bottom::before {\n        border-bottom: 8px solid ${borderColor};\n    }\n    .${uuid}.place-bottom::after {\n        border-left: 8px solid transparent;\n        border-right: 8px solid transparent;\n        top: -6px;\n        left: 50%;\n        margin-left: -8px;\n        border-bottom-color: ${arrowColor};\n        border-bottom-style: solid;\n        border-bottom-width: 6px;\n    }\n\n    .${uuid}.place-left {\n        margin-left: -10px;\n    }\n    .${uuid}.place-left::before {\n        border-left: 8px solid ${borderColor};\n    }\n    .${uuid}.place-left::after {\n        border-top: 5px solid transparent;\n        border-bottom: 5px solid transparent;\n        right: -6px;\n        top: 50%;\n        margin-top: -4px;\n        border-left-color: ${arrowColor};\n        border-left-style: solid;\n        border-left-width: 6px;\n    }\n\n    .${uuid}.place-right {\n        margin-left: 10px;\n    }\n    .${uuid}.place-right::before {\n        border-right: 8px solid ${borderColor};\n    }\n    .${uuid}.place-right::after {\n        border-top: 5px solid transparent;\n        border-bottom: 5px solid transparent;\n        left: -6px;\n        top: 50%;\n        margin-top: -4px;\n        border-right-color: ${arrowColor};\n        border-right-style: solid;\n        border-right-width: 6px;\n    }\n  `;\n}\n\nfunction getPopupColors(customColors, type, hasBorder) {\n  const textColor = customColors.text;\n  const backgroundColor = customColors.background;\n  const borderColor = customColors.border;\n  const arrowColor = customColors.arrow\n    ? customColors.arrow\n    : customColors.background;\n\n  const colors = getDefaultPopupColors(type);\n\n  if (textColor) {\n    colors.text = textColor;\n  }\n\n  if (backgroundColor) {\n    colors.background = backgroundColor;\n  }\n\n  if (hasBorder) {\n    if (borderColor) {\n      colors.border = borderColor;\n    } else {\n      colors.border = type === 'light' ? 'black' : 'white';\n    }\n  }\n\n  if (arrowColor) {\n    colors.arrow = arrowColor;\n  }\n\n  return colors;\n}\n","/**\n * Tracking target removing from DOM.\n * It's necessary to hide tooltip when it's target disappears.\n * Otherwise, the tooltip would be shown forever until another target\n * is triggered.\n *\n * If MutationObserver is not available, this feature just doesn't work.\n */\n\n// https://hacks.mozilla.org/2012/05/dom-mutationobserver-reacting-to-dom-changes-without-killing-browser-performance/\nconst getMutationObserverClass = () => {\n  return (\n    window.MutationObserver ||\n    window.WebKitMutationObserver ||\n    window.MozMutationObserver\n  );\n};\n\nexport default function(target) {\n  target.prototype.bindRemovalTracker = function() {\n    const MutationObserver = getMutationObserverClass();\n    if (MutationObserver == null) return;\n\n    const observer = new MutationObserver(mutations => {\n      for (let m1 = 0; m1 < mutations.length; m1++) {\n        const mutation = mutations[m1];\n        for (let m2 = 0; m2 < mutation.removedNodes.length; m2++) {\n          const element = mutation.removedNodes[m2];\n          if (element === this.state.currentTarget) {\n            this.hideTooltip();\n            return;\n          }\n        }\n      }\n    });\n\n    observer.observe(window.document, { childList: true, subtree: true });\n\n    this.removalTracker = observer;\n  };\n\n  target.prototype.unbindRemovalTracker = function() {\n    if (this.removalTracker) {\n      this.removalTracker.disconnect();\n      this.removalTracker = null;\n    }\n  };\n}\n","/* eslint-disable no-unused-vars, dot-notation */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/* Decorators */\nimport staticMethods from './decorators/staticMethods';\nimport windowListener from './decorators/windowListener';\nimport customEvent from './decorators/customEvent';\nimport isCapture from './decorators/isCapture';\nimport getEffect from './decorators/getEffect';\nimport bodyMode from './decorators/bodyMode';\nimport trackRemoval from './decorators/trackRemoval';\n\n/* Utils */\nimport getPosition from './utils/getPosition';\nimport getTipContent from './utils/getTipContent';\nimport { parseAria } from './utils/aria';\nimport nodeListToArray from './utils/nodeListToArray';\nimport { generateUUID } from './utils/uuid';\n\n/* CSS */\nimport baseCss from './index.scss';\nimport { generateTooltipStyle } from './decorators/styler';\n\n@staticMethods\n@windowListener\n@customEvent\n@isCapture\n@getEffect\n@bodyMode\n@trackRemoval\nclass ReactTooltip extends React.Component {\n  static get propTypes() {\n    return {\n      uuid: PropTypes.string,\n      children: PropTypes.any,\n      place: PropTypes.string,\n      type: PropTypes.string,\n      effect: PropTypes.string,\n      offset: PropTypes.object,\n      multiline: PropTypes.bool,\n      border: PropTypes.bool,\n      textColor: PropTypes.string,\n      backgroundColor: PropTypes.string,\n      borderColor: PropTypes.string,\n      arrowColor: PropTypes.string,\n      insecure: PropTypes.bool,\n      class: PropTypes.string,\n      className: PropTypes.string,\n      id: PropTypes.string,\n      html: PropTypes.bool,\n      delayHide: PropTypes.number,\n      delayUpdate: PropTypes.number,\n      delayShow: PropTypes.number,\n      event: PropTypes.string,\n      eventOff: PropTypes.string,\n      isCapture: PropTypes.bool,\n      globalEventOff: PropTypes.string,\n      getContent: PropTypes.any,\n      afterShow: PropTypes.func,\n      afterHide: PropTypes.func,\n      overridePosition: PropTypes.func,\n      disable: PropTypes.bool,\n      scrollHide: PropTypes.bool,\n      resizeHide: PropTypes.bool,\n      wrapper: PropTypes.string,\n      bodyMode: PropTypes.bool,\n      possibleCustomEvents: PropTypes.string,\n      possibleCustomEventsOff: PropTypes.string,\n      clickable: PropTypes.bool\n    };\n  }\n\n  static defaultProps = {\n    insecure: true,\n    resizeHide: true,\n    wrapper: 'div',\n    clickable: false\n  };\n\n  static supportedWrappers = ['div', 'span'];\n\n  static displayName = 'ReactTooltip';\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      uuid: props.uuid || generateUUID(),\n      place: props.place || 'top', // Direction of tooltip\n      desiredPlace: props.place || 'top',\n      type: 'dark', // Color theme of tooltip\n      effect: 'float', // float or fixed\n      show: false,\n      border: false,\n      customColors: {},\n      offset: {},\n      extraClass: '',\n      html: false,\n      delayHide: 0,\n      delayShow: 0,\n      event: props.event || null,\n      eventOff: props.eventOff || null,\n      currentEvent: null, // Current mouse event\n      currentTarget: null, // Current target of mouse event\n      ariaProps: parseAria(props), // aria- and role attributes\n      isEmptyTip: false,\n      disable: false,\n      possibleCustomEvents: props.possibleCustomEvents || '',\n      possibleCustomEventsOff: props.possibleCustomEventsOff || '',\n      originTooltip: null,\n      isMultiline: false\n    };\n\n    this.bind([\n      'showTooltip',\n      'updateTooltip',\n      'hideTooltip',\n      'hideTooltipOnScroll',\n      'getTooltipContent',\n      'globalRebuild',\n      'globalShow',\n      'globalHide',\n      'onWindowResize',\n      'mouseOnToolTip'\n    ]);\n\n    this.mount = true;\n    this.delayShowLoop = null;\n    this.delayHideLoop = null;\n    this.delayReshow = null;\n    this.intervalUpdateContent = null;\n  }\n\n  /**\n   * For unify the bind and unbind listener\n   */\n  bind(methodArray) {\n    methodArray.forEach(method => {\n      this[method] = this[method].bind(this);\n    });\n  }\n\n  componentDidMount() {\n    const { insecure, resizeHide } = this.props;\n\n    this.bindListener(); // Bind listener for tooltip\n    this.bindWindowEvents(resizeHide); // Bind global event for static method\n    this.injectStyles(); // Inject styles for each DOM root having tooltip.\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { ariaProps } = prevState;\n    const newAriaProps = parseAria(nextProps);\n    const isChanged = Object.keys(newAriaProps).some(props => {\n      return newAriaProps[props] !== ariaProps[props];\n    });\n    if (!isChanged) {\n      return null;\n    }\n    return {\n      ...prevState,\n      ariaProps: newAriaProps\n    };\n  }\n\n  componentWillUnmount() {\n    this.mount = false;\n\n    this.clearTimer();\n\n    this.unbindListener();\n    this.removeScrollListener(this.state.currentTarget);\n    this.unbindWindowEvents();\n  }\n\n  /* Look for the closest DOM root having tooltip and inject styles. */\n  injectStyles() {\n    const { tooltipRef } = this;\n    if (!tooltipRef) {\n      return;\n    }\n\n    let parentNode = tooltipRef.parentNode;\n    while (parentNode.parentNode) {\n      parentNode = parentNode.parentNode;\n    }\n\n    let domRoot;\n\n    switch (parentNode.constructor.name) {\n      case 'Document':\n      case 'HTMLDocument':\n        domRoot = parentNode.head;\n        break;\n      case 'ShadowRoot':\n      default:\n        domRoot = parentNode;\n        break;\n    }\n\n    // Prevent styles duplication.\n    if (!domRoot.querySelector('style[data-react-tooltip]')) {\n      const style = document.createElement('style');\n      style.textContent = baseCss;\n      style.setAttribute('data-react-tooltip', 'true');\n\n      domRoot.appendChild(style);\n    }\n  }\n\n  /**\n   * Return if the mouse is on the tooltip.\n   * @returns {boolean} true - mouse is on the tooltip\n   */\n  mouseOnToolTip() {\n    const { show } = this.state;\n\n    if (show && this.tooltipRef) {\n      /* old IE or Firefox work around */\n      if (!this.tooltipRef.matches) {\n        /* old IE work around */\n        if (this.tooltipRef.msMatchesSelector) {\n          this.tooltipRef.matches = this.tooltipRef.msMatchesSelector;\n        } else {\n          /* old Firefox work around */\n          this.tooltipRef.matches = this.tooltipRef.mozMatchesSelector;\n        }\n      }\n      return this.tooltipRef.matches(':hover');\n    }\n    return false;\n  }\n\n  /**\n   * Pick out corresponded target elements\n   */\n  getTargetArray(id) {\n    let targetArray = [];\n    let selector;\n    if (!id) {\n      selector = '[data-tip]:not([data-for])';\n    } else {\n      const escaped = id.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"');\n      selector = `[data-tip][data-for=\"${escaped}\"]`;\n    }\n\n    // Scan document for shadow DOM elements\n    nodeListToArray(document.getElementsByTagName('*'))\n      .filter(element => element.shadowRoot)\n      .forEach(element => {\n        targetArray = targetArray.concat(\n          nodeListToArray(element.shadowRoot.querySelectorAll(selector))\n        );\n      });\n    return targetArray.concat(\n      nodeListToArray(document.querySelectorAll(selector))\n    );\n  }\n\n  /**\n   * Bind listener to the target elements\n   * These listeners used to trigger showing or hiding the tooltip\n   */\n  bindListener() {\n    const { id, globalEventOff, isCapture } = this.props;\n    const targetArray = this.getTargetArray(id);\n\n    targetArray.forEach(target => {\n      if (target.getAttribute('currentItem') === null) {\n        target.setAttribute('currentItem', 'false');\n      }\n      this.unbindBasicListener(target);\n      if (this.isCustomEvent(target)) {\n        this.customUnbindListener(target);\n      }\n    });\n\n    if (this.isBodyMode()) {\n      this.bindBodyListener(targetArray);\n    } else {\n      targetArray.forEach(target => {\n        const isCaptureMode = this.isCapture(target);\n        const effect = this.getEffect(target);\n        if (this.isCustomEvent(target)) {\n          this.customBindListener(target);\n          return;\n        }\n\n        target.addEventListener('mouseenter', this.showTooltip, isCaptureMode);\n        target.addEventListener('focus', this.showTooltip, isCaptureMode);\n        if (effect === 'float') {\n          target.addEventListener(\n            'mousemove',\n            this.updateTooltip,\n            isCaptureMode\n          );\n        }\n        target.addEventListener('mouseleave', this.hideTooltip, isCaptureMode);\n        target.addEventListener('blur', this.hideTooltip, isCaptureMode);\n      });\n    }\n\n    // Global event to hide tooltip\n    if (globalEventOff) {\n      window.removeEventListener(globalEventOff, this.hideTooltip);\n      window.addEventListener(globalEventOff, this.hideTooltip, isCapture);\n    }\n\n    // Track removal of targetArray elements from DOM\n    this.bindRemovalTracker();\n  }\n\n  /**\n   * Unbind listeners on target elements\n   */\n  unbindListener() {\n    const { id, globalEventOff } = this.props;\n    if (this.isBodyMode()) {\n      this.unbindBodyListener();\n    } else {\n      const targetArray = this.getTargetArray(id);\n      targetArray.forEach(target => {\n        this.unbindBasicListener(target);\n        if (this.isCustomEvent(target)) this.customUnbindListener(target);\n      });\n    }\n\n    if (globalEventOff)\n      window.removeEventListener(globalEventOff, this.hideTooltip);\n    this.unbindRemovalTracker();\n  }\n\n  /**\n   * Invoke this before bind listener and unmount the component\n   * it is necessary to invoke this even when binding custom event\n   * so that the tooltip can switch between custom and default listener\n   */\n  unbindBasicListener(target) {\n    const isCaptureMode = this.isCapture(target);\n    target.removeEventListener('mouseenter', this.showTooltip, isCaptureMode);\n    target.removeEventListener('mousemove', this.updateTooltip, isCaptureMode);\n    target.removeEventListener('mouseleave', this.hideTooltip, isCaptureMode);\n  }\n\n  getTooltipContent() {\n    const { getContent, children } = this.props;\n\n    // Generate tooltip content\n    let content;\n    if (getContent) {\n      if (Array.isArray(getContent)) {\n        content = getContent[0] && getContent[0](this.state.originTooltip);\n      } else {\n        content = getContent(this.state.originTooltip);\n      }\n    }\n\n    return getTipContent(\n      this.state.originTooltip,\n      children,\n      content,\n      this.state.isMultiline\n    );\n  }\n\n  isEmptyTip(placeholder) {\n    return (\n      (typeof placeholder === 'string' && placeholder === '') ||\n      placeholder === null\n    );\n  }\n\n  /**\n   * When mouse enter, show the tooltip\n   */\n  showTooltip(e, isGlobalCall) {\n    if (!this.tooltipRef) {\n      return;\n    }\n\n    if (isGlobalCall) {\n      // Don't trigger other elements belongs to other ReactTooltip\n      const targetArray = this.getTargetArray(this.props.id);\n      const isMyElement = targetArray.some(ele => ele === e.currentTarget);\n      if (!isMyElement) return;\n    }\n    // Get the tooltip content\n    // calculate in this phrase so that tip width height can be detected\n    const { multiline, getContent } = this.props;\n    const originTooltip = e.currentTarget.getAttribute('data-tip');\n    const isMultiline =\n      e.currentTarget.getAttribute('data-multiline') || multiline || false;\n\n    // If it is focus event or called by ReactTooltip.show, switch to `solid` effect\n    const switchToSolid = e instanceof window.FocusEvent || isGlobalCall;\n\n    // if it needs to skip adding hide listener to scroll\n    let scrollHide = true;\n    if (e.currentTarget.getAttribute('data-scroll-hide')) {\n      scrollHide = e.currentTarget.getAttribute('data-scroll-hide') === 'true';\n    } else if (this.props.scrollHide != null) {\n      scrollHide = this.props.scrollHide;\n    }\n\n    // adding aria-describedby to target to make tooltips read by screen readers\n    if (e && e.currentTarget && e.currentTarget.setAttribute) {\n      e.currentTarget.setAttribute('aria-describedby', this.state.uuid);\n    }\n\n    // Make sure the correct place is set\n    const desiredPlace =\n      e.currentTarget.getAttribute('data-place') || this.props.place || 'top';\n    const effect =\n      (switchToSolid && 'solid') || this.getEffect(e.currentTarget);\n    const offset =\n      e.currentTarget.getAttribute('data-offset') || this.props.offset || {};\n    const result = getPosition(\n      e,\n      e.currentTarget,\n      this.tooltipRef,\n      desiredPlace,\n      desiredPlace,\n      effect,\n      offset\n    );\n    if (result.position && this.props.overridePosition) {\n      result.position = this.props.overridePosition(\n        result.position,\n        e,\n        e.currentTarget,\n        this.tooltipRef,\n        desiredPlace,\n        desiredPlace,\n        effect,\n        offset\n      );\n    }\n\n    const place = result.isNewState ? result.newState.place : desiredPlace;\n\n    // To prevent previously created timers from triggering\n    this.clearTimer();\n\n    const target = e.currentTarget;\n\n    const reshowDelay = this.state.show\n      ? target.getAttribute('data-delay-update') || this.props.delayUpdate\n      : 0;\n\n    const self = this;\n\n    const updateState = function updateState() {\n      self.setState(\n        {\n          originTooltip: originTooltip,\n          isMultiline: isMultiline,\n          desiredPlace: desiredPlace,\n          place: place,\n          type: target.getAttribute('data-type') || self.props.type || 'dark',\n          customColors: {\n            text:\n              target.getAttribute('data-text-color') ||\n              self.props.textColor ||\n              null,\n            background:\n              target.getAttribute('data-background-color') ||\n              self.props.backgroundColor ||\n              null,\n            border:\n              target.getAttribute('data-border-color') ||\n              self.props.borderColor ||\n              null,\n            arrow:\n              target.getAttribute('data-arrow-color') ||\n              self.props.arrowColor ||\n              null\n          },\n          effect: effect,\n          offset: offset,\n          html:\n            (target.getAttribute('data-html')\n              ? target.getAttribute('data-html') === 'true'\n              : self.props.html) || false,\n          delayShow:\n            target.getAttribute('data-delay-show') || self.props.delayShow || 0,\n          delayHide:\n            target.getAttribute('data-delay-hide') || self.props.delayHide || 0,\n          delayUpdate:\n            target.getAttribute('data-delay-update') ||\n            self.props.delayUpdate ||\n            0,\n          border:\n            (target.getAttribute('data-border')\n              ? target.getAttribute('data-border') === 'true'\n              : self.props.border) || false,\n          extraClass:\n            target.getAttribute('data-class') ||\n            self.props.class ||\n            self.props.className ||\n            '',\n          disable:\n            (target.getAttribute('data-tip-disable')\n              ? target.getAttribute('data-tip-disable') === 'true'\n              : self.props.disable) || false,\n          currentTarget: target\n        },\n        () => {\n          if (scrollHide) {\n            self.addScrollListener(self.state.currentTarget);\n          }\n\n          self.updateTooltip(e);\n\n          if (getContent && Array.isArray(getContent)) {\n            self.intervalUpdateContent = setInterval(() => {\n              if (self.mount) {\n                const { getContent } = self.props;\n                const placeholder = getTipContent(\n                  originTooltip,\n                  '',\n                  getContent[0](),\n                  isMultiline\n                );\n                const isEmptyTip = self.isEmptyTip(placeholder);\n                self.setState({ isEmptyTip });\n                self.updatePosition();\n              }\n            }, getContent[1]);\n          }\n        }\n      );\n    };\n\n    // If there is no delay call immediately, don't allow events to get in first.\n    if (reshowDelay) {\n      this.delayReshow = setTimeout(updateState, reshowDelay);\n    } else {\n      updateState();\n    }\n  }\n\n  /**\n   * When mouse hover, update tool tip\n   */\n  updateTooltip(e) {\n    const { delayShow, disable } = this.state;\n    const { afterShow } = this.props;\n    const placeholder = this.getTooltipContent();\n    const eventTarget = e.currentTarget || e.target;\n\n    // Check if the mouse is actually over the tooltip, if so don't hide the tooltip\n    if (this.mouseOnToolTip()) {\n      return;\n    }\n\n    // if the tooltip is empty, disable the tooltip\n    if (this.isEmptyTip(placeholder) || disable) {\n      return;\n    }\n\n    const delayTime = !this.state.show ? parseInt(delayShow, 10) : 0;\n\n    const updateState = () => {\n      if (\n        (Array.isArray(placeholder) && placeholder.length > 0) ||\n        placeholder\n      ) {\n        const isInvisible = !this.state.show;\n        this.setState(\n          {\n            currentEvent: e,\n            currentTarget: eventTarget,\n            show: true\n          },\n          () => {\n            this.updatePosition();\n            if (isInvisible && afterShow) {\n              afterShow(e);\n            }\n          }\n        );\n      }\n    };\n\n    clearTimeout(this.delayShowLoop);\n    if (delayTime) {\n      this.delayShowLoop = setTimeout(updateState, delayTime);\n    } else {\n      updateState();\n    }\n  }\n\n  /*\n   * If we're mousing over the tooltip remove it when we leave.\n   */\n  listenForTooltipExit() {\n    const { show } = this.state;\n\n    if (show && this.tooltipRef) {\n      this.tooltipRef.addEventListener('mouseleave', this.hideTooltip);\n    }\n  }\n\n  removeListenerForTooltipExit() {\n    const { show } = this.state;\n\n    if (show && this.tooltipRef) {\n      this.tooltipRef.removeEventListener('mouseleave', this.hideTooltip);\n    }\n  }\n\n  /**\n   * When mouse leave, hide tooltip\n   */\n  hideTooltip(e, hasTarget, options = { isScroll: false }) {\n    const { disable } = this.state;\n    const { isScroll } = options;\n    const delayHide = isScroll ? 0 : this.state.delayHide;\n    const { afterHide } = this.props;\n    const placeholder = this.getTooltipContent();\n    if (!this.mount) return;\n    if (this.isEmptyTip(placeholder) || disable) return; // if the tooltip is empty, disable the tooltip\n    if (hasTarget) {\n      // Don't trigger other elements belongs to other ReactTooltip\n      const targetArray = this.getTargetArray(this.props.id);\n      const isMyElement = targetArray.some(ele => ele === e.currentTarget);\n      if (!isMyElement || !this.state.show) return;\n    }\n\n    // clean up aria-describedby when hiding tooltip\n    if (e && e.currentTarget && e.currentTarget.removeAttribute) {\n      e.currentTarget.removeAttribute('aria-describedby');\n    }\n\n    const resetState = () => {\n      const isVisible = this.state.show;\n      // Check if the mouse is actually over the tooltip, if so don't hide the tooltip\n      if (this.mouseOnToolTip()) {\n        this.listenForTooltipExit();\n        return;\n      }\n\n      this.removeListenerForTooltipExit();\n\n      this.setState({ show: false }, () => {\n        this.removeScrollListener(this.state.currentTarget);\n        if (isVisible && afterHide) {\n          afterHide(e);\n        }\n      });\n    };\n\n    this.clearTimer();\n    if (delayHide) {\n      this.delayHideLoop = setTimeout(resetState, parseInt(delayHide, 10));\n    } else {\n      resetState();\n    }\n  }\n\n  /**\n   * When scroll, hide tooltip\n   */\n  hideTooltipOnScroll(event, hasTarget) {\n    this.hideTooltip(event, hasTarget, { isScroll: true });\n  }\n\n  /**\n   * Add scroll event listener when tooltip show\n   * automatically hide the tooltip when scrolling\n   */\n  addScrollListener(currentTarget) {\n    const isCaptureMode = this.isCapture(currentTarget);\n    window.addEventListener('scroll', this.hideTooltipOnScroll, isCaptureMode);\n  }\n\n  removeScrollListener(currentTarget) {\n    const isCaptureMode = this.isCapture(currentTarget);\n    window.removeEventListener(\n      'scroll',\n      this.hideTooltipOnScroll,\n      isCaptureMode\n    );\n  }\n\n  // Calculation the position\n  updatePosition() {\n    const {\n      currentEvent,\n      currentTarget,\n      place,\n      desiredPlace,\n      effect,\n      offset\n    } = this.state;\n    const node = this.tooltipRef;\n    const result = getPosition(\n      currentEvent,\n      currentTarget,\n      node,\n      place,\n      desiredPlace,\n      effect,\n      offset\n    );\n    if (result.position && this.props.overridePosition) {\n      result.position = this.props.overridePosition(\n        result.position,\n        currentEvent,\n        currentTarget,\n        node,\n        place,\n        desiredPlace,\n        effect,\n        offset\n      );\n    }\n\n    if (result.isNewState) {\n      // Switch to reverse placement\n      return this.setState(result.newState, () => {\n        this.updatePosition();\n      });\n    }\n\n    // Set tooltip position\n    node.style.left = result.position.left + 'px';\n    node.style.top = result.position.top + 'px';\n  }\n\n  /**\n   * CLear all kinds of timeout of interval\n   */\n  clearTimer() {\n    clearTimeout(this.delayShowLoop);\n    clearTimeout(this.delayHideLoop);\n    clearTimeout(this.delayReshow);\n    clearInterval(this.intervalUpdateContent);\n  }\n\n  hasCustomColors() {\n    return Boolean(\n      Object.keys(this.state.customColors).find(\n        color => color !== 'border' && this.state.customColors[color]\n      ) ||\n        (this.state.border && this.state.customColors['border'])\n    );\n  }\n\n  render() {\n    const { extraClass, html, ariaProps, disable, uuid } = this.state;\n    const content = this.getTooltipContent();\n    const isEmptyTip = this.isEmptyTip(content);\n    const style = generateTooltipStyle(\n      this.state.uuid,\n      this.state.customColors,\n      this.state.type,\n      this.state.border\n    );\n\n    const tooltipClass =\n      '__react_component_tooltip' +\n      ` ${this.state.uuid}` +\n      (this.state.show && !disable && !isEmptyTip ? ' show' : '') +\n      (this.state.border ? ' border' : '') +\n      ` place-${this.state.place}` + // top, bottom, left, right\n      ` type-${this.hasCustomColors() ? 'custom' : this.state.type}` + // dark, success, warning, error, info, light, custom\n      (this.props.delayUpdate ? ' allow_hover' : '') +\n      (this.props.clickable ? ' allow_click' : '');\n\n    let Wrapper = this.props.wrapper;\n\n    if (ReactTooltip.supportedWrappers.indexOf(Wrapper) < 0) {\n      Wrapper = ReactTooltip.defaultProps.wrapper;\n    }\n\n    const wrapperClassName = [tooltipClass, extraClass]\n      .filter(Boolean)\n      .join(' ');\n\n    if (html) {\n      const htmlContent = `${content}\\n<style>${style}</style>`;\n\n      return (\n        <Wrapper\n          className={`${wrapperClassName}`}\n          id={this.props.id || uuid}\n          ref={ref => (this.tooltipRef = ref)}\n          {...ariaProps}\n          data-id=\"tooltip\"\n          dangerouslySetInnerHTML={{ __html: htmlContent }}\n        />\n      );\n    } else {\n      return (\n        <Wrapper\n          className={`${wrapperClassName}`}\n          id={this.props.id || uuid}\n          {...ariaProps}\n          ref={ref => (this.tooltipRef = ref)}\n          data-id=\"tooltip\"\n        >\n          <style dangerouslySetInnerHTML={{ __html: style }} />\n          {content}\n        </Wrapper>\n      );\n    }\n  }\n}\n\nexport default ReactTooltip;\n","/**\n * Events that should be bound to the window\n */\nimport CONSTANT from '../constant';\n\nexport default function(target) {\n  target.prototype.bindWindowEvents = function(resizeHide) {\n    // ReactTooltip.hide\n    window.removeEventListener(CONSTANT.GLOBAL.HIDE, this.globalHide);\n    window.addEventListener(CONSTANT.GLOBAL.HIDE, this.globalHide, false);\n\n    // ReactTooltip.rebuild\n    window.removeEventListener(CONSTANT.GLOBAL.REBUILD, this.globalRebuild);\n    window.addEventListener(CONSTANT.GLOBAL.REBUILD, this.globalRebuild, false);\n\n    // ReactTooltip.show\n    window.removeEventListener(CONSTANT.GLOBAL.SHOW, this.globalShow);\n    window.addEventListener(CONSTANT.GLOBAL.SHOW, this.globalShow, false);\n\n    // Resize\n    if (resizeHide) {\n      window.removeEventListener('resize', this.onWindowResize);\n      window.addEventListener('resize', this.onWindowResize, false);\n    }\n  };\n\n  target.prototype.unbindWindowEvents = function() {\n    window.removeEventListener(CONSTANT.GLOBAL.HIDE, this.globalHide);\n    window.removeEventListener(CONSTANT.GLOBAL.REBUILD, this.globalRebuild);\n    window.removeEventListener(CONSTANT.GLOBAL.SHOW, this.globalShow);\n    window.removeEventListener('resize', this.onWindowResize);\n  };\n\n  /**\n   * invoked by resize event of window\n   */\n  target.prototype.onWindowResize = function() {\n    if (!this.mount) return;\n    this.hideTooltip();\n  };\n}\n","/**\n * Util method to judge if it should follow capture model\n */\n\nexport default function(target) {\n  target.prototype.isCapture = function(currentTarget) {\n    return (\n      (currentTarget &&\n        currentTarget.getAttribute('data-iscapture') === 'true') ||\n      this.props.isCapture ||\n      false\n    );\n  };\n}\n","/**\n * Util method to get effect\n */\n\nexport default function(target) {\n  target.prototype.getEffect = function(currentTarget) {\n    const dataEffect = currentTarget.getAttribute('data-effect');\n    return dataEffect || this.props.effect || 'float';\n  };\n}\n","import { v4 as uuid } from 'uuid';\n\nexport function generateUUID() {\n  return 't' + uuid();\n}\n"],"names":["getRandomValues","crypto","bind","msCrypto","rnds8","Uint8Array","rng","Error","byteToHex","i","toString","substr","buf","offset","bth","join","options","Array","rnds","random","ii","bytesToUuid","HIDE","REBUILD","SHOW","dispatchGlobalEvent","eventName","opts","event","window","CustomEvent","detail","document","createEvent","initEvent","dispatchEvent","checkStatus","dataEventOff","e","show","this","state","id","props","isCapture","currentTarget","currentItem","getAttribute","stopPropagation","hideTooltip","setAttribute","setUntargetItems","getTargetArray","showTooltip","targetArray","length","customListeners","set","target","listener","Object","defineProperty","configurable","value","get","map","undefined","bodyListener","callback","respectEffect","customEvent","tip","forId","isCustomEvent","isTargetBelongsToTooltip","getEffect","proxy","key","makeProxy","findCustomEvents","dataAttribute","events","forEach","split","getBody","getElementsByTagName","getPosition","node","place","desiredPlace","effect","getDimensions","tipWidth","width","tipHeight","height","targetWidth","targetHeight","getCurrentOffset","mouseX","mouseY","defaultOffset","getDefaultPosition","calculateOffset","extraOffsetX","extraOffsetY","windowWidth","innerWidth","windowHeight","innerHeight","getParent","parentTop","parentLeft","getTipOffsetLeft","offsetX","l","getTipOffsetTop","offsetY","t","outsideRight","p","r","getTipOffsetRight","outsideBottom","b","getTipOffsetBottom","outside","outsideLeft","outsideTop","inside","placesList","insideList","push","newPlace","isNewState","shouldUpdatePlace","newState","position","left","parseInt","top","getBoundingClientRect","boundingClientRect","targetTop","targetLeft","clientX","clientY","right","bottom","disToMouse","prototype","apply","JSON","parse","replace","currentParent","computedStyle","getComputedStyle","getPropertyValue","parentElement","getTipContent","children","getContent","multiline","regexp","test","d","React","className","parseAria","ariaObj","keys","filter","prop","nodeListToArray","nodeList","hasOwnProperty","slice","call","fill","index","defaultColors","dark","text","background","border","arrow","success","warning","error","info","light","generateTooltipStyle","uuid","customColors","type","hasBorder","colors","textColor","backgroundColor","borderColor","arrowColor","generateStyle","getDefaultPopupColors","getPopupColors","ReactTooltip","hide","CONSTANT","rebuild","globalRebuild","mount","unbindListener","bindListener","globalShow","hasTarget","globalHide","staticMethods","bindWindowEvents","resizeHide","removeEventListener","addEventListener","onWindowResize","unbindWindowEvents","windowListener","ele","customBindListener","eventOff","dataEvent","customListener","_this","customUnbindListener","isBodyMode","bodyMode","bindBodyListener","possibleCustomEvents","possibleCustomEventsOff","body","customEvents","customEventsOff","unbindBodyListener","listeners","bodyModeListeners","mouseover","mousemove","updateTooltip","mouseout","targetEventOff","trackRemoval","_classCallCheck","extraClass","html","delayHide","delayShow","currentEvent","ariaProps","isEmptyTip","disable","originTooltip","isMultiline","delayShowLoop","delayHideLoop","delayReshow","intervalUpdateContent","PropTypes","insecure","class","delayUpdate","globalEventOff","afterShow","afterHide","overridePosition","scrollHide","wrapper","clickable","methodArray","method","_this2","injectStyles","clearTimer","removeScrollListener","tooltipRef","domRoot","parentNode","constructor","name","head","querySelector","style","createElement","textContent","appendChild","matches","msMatchesSelector","mozMatchesSelector","selector","escaped","element","shadowRoot","concat","querySelectorAll","_this3","unbindBasicListener","isCaptureMode","bindRemovalTracker","_this4","unbindRemovalTracker","content","isArray","placeholder","isGlobalCall","some","switchToSolid","FocusEvent","result","reshowDelay","self","updateState","setState","addScrollListener","setInterval","updatePosition","setTimeout","getTooltipContent","eventTarget","mouseOnToolTip","delayTime","isInvisible","_this5","clearTimeout","isScroll","isMyElement","removeAttribute","resetState","isVisible","_this6","listenForTooltipExit","removeListenerForTooltipExit","hideTooltipOnScroll","_this7","clearInterval","Boolean","find","color","_this8","tooltipClass","hasCustomColors","Wrapper","supportedWrappers","indexOf","defaultProps","wrapperClassName","htmlContent","ref","_this9","dangerouslySetInnerHTML","__html","nextProps","prevState","newAriaProps","Component","_defineProperty","_temp","MutationObserver","WebKitMutationObserver","MozMutationObserver","observer","mutations","m1","mutation","m2","removedNodes","observe","childList","subtree","removalTracker","disconnect","_class"],"sourceRoot":""}