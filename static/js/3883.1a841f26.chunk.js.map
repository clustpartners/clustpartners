{"version":3,"file":"static/js/3883.1a841f26.chunk.js","mappings":"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","sources":["../../components/src/ui/card/card-footer.tsx","../../components/src/ui/media/media-body.tsx","../../components/src/ui/media/media.tsx","../../components/src/ui/media/style.tsx","components/event-card/style.tsx","components/event-card/index.tsx","containers/events/main/index.tsx","components/widgets/upcoming-events/style.tsx","components/widgets/upcoming-events/index.tsx","components/widgets/events-by-location/index.tsx","containers/events/sidebar/style.tsx","containers/events/sidebar/index.tsx","pages/events.tsx"],"sourcesContent":["import classnames from \"clsx\";\nimport { StyledCardFooter } from \"./style\";\nimport { ICardFooterProps } from \"./types\";\n\nconst CardFooter = ({\n    children,\n    className,\n    ...restProps\n}: ICardFooterProps) => {\n    return (\n        <StyledCardFooter\n            className={classnames(className, \"card-footer\")}\n            {...restProps}\n        >\n            {children}\n        </StyledCardFooter>\n    );\n};\nexport default CardFooter;\n","import classnames from \"clsx\";\nimport { SpaceProps } from \"@doar/shared/styled\";\nimport { StyledMediaBody } from \"./style\";\n\ninterface IMediaBodyProps extends SpaceProps {\n    className?: string;\n    children: React.ReactNode;\n}\n\nconst MediaBody = ({ children, className, ...restProps }: IMediaBodyProps) => {\n    return (\n        <StyledMediaBody\n            className={classnames(className, \"media-body\")}\n            {...restProps}\n        >\n            {children}\n        </StyledMediaBody>\n    );\n};\n\nexport default MediaBody;\n","import classnames from \"clsx\";\nimport { SpaceProps, FlexboxProps, LayoutProps } from \"@doar/shared/styled\";\nimport { StyledMedia } from \"./style\";\n\ninterface IMediaProps extends SpaceProps, FlexboxProps, LayoutProps {\n    as?: React.ElementType;\n    className?: string;\n    children: React.ReactNode;\n}\n\nconst Media = ({ children, as, className, ...restProps }: IMediaProps) => {\n    return (\n        <StyledMedia\n            className={classnames(className, \"media\")}\n            as={as}\n            $el={as}\n            {...restProps}\n        >\n            {children}\n        </StyledMedia>\n    );\n};\n\nexport default Media;\n","import styled, {\n    layout,\n    space,\n    flexbox,\n    css,\n    SpaceProps,\n    LayoutProps,\n    FlexboxProps,\n} from \"@doar/shared/styled\";\n\ninterface IMedia extends SpaceProps, FlexboxProps, LayoutProps {\n    $el: string;\n}\n\nexport const StyledMedia = styled(\n    ({ m, ml, mr, mt, mb, display, alignItems, $el, ...props }) => (\n        <div {...props} />\n    )\n)<IMedia>`\n    ${({ $el }) =>\n        $el !== \"ul\" &&\n        css`\n            display: flex;\n            align-items: flex-start;\n        `}\n    ${layout};\n    ${space};\n    ${flexbox};\n`;\n\ninterface IMediaLeft extends SpaceProps, LayoutProps {}\n\nexport const StyledMediaLeft = styled(({ width, mr, ml, ...props }) => (\n    <div {...props} />\n))<IMediaLeft>`\n    ${layout};\n    ${space};\n    ${(props) =>\n        props.$alignMent === \"middle\" &&\n        css`\n            align-self: center;\n        `}\n    ${(props) =>\n        props.$alignMent === \"end\" &&\n        css`\n            align-self: flex-end;\n        `}\n    img {\n        max-width: 100%;\n    }\n`;\n\nexport const StyledMediaBody = styled(\n    ({ width, m, mr, ml, mt, mb, px, ...props }) => <div {...props} />\n)<SpaceProps>`\n    ${space};\n    flex: 1;\n`;\n","import styled, { device, themeGet } from \"@doar/shared/styled\";\nimport { Card, CardBody, CardFooter } from \"@doar/components\";\n\nexport const StyledCard = styled(({ ...rest }) => <Card {...rest} />)`\n    border-width: 0;\n    .card-img-top {\n        height: 150px;\n        object-fit: cover;\n    }\n`;\n\nexport const StyledCardBody = styled(({ ...rest }) => <CardBody {...rest} />)`\n    font-size: 13px;\n    padding: 15px;\n    border: 1px solid ${themeGet(\"colors.border\")};\n    ${device.large} {\n        padding: 20px;\n    }\n`;\n\nexport const StyledCardFooter = styled(({ ...rest }) => (\n    <CardFooter {...rest} />\n))`\n    border: 1px solid ${themeGet(\"colors.border\")};\n    border-top-width: 0;\n    border-bottom-right-radius: ${themeGet(\"radii.rounded\")};\n    border-bottom-left-radius: ${themeGet(\"radii.rounded\")};\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    font-size: 13px;\n`;\n\nexport const StyledName = styled.h5`\n    font-size: 14px;\n    margin-top: 15px;\n    margin-bottom: 0;\n    ${device.large} {\n        font-size: 15px;\n    }\n`;\n","import { CardImage, Anchor, Text, Button } from \"@doar/components\";\nimport {\n    StyledCard,\n    StyledCardBody,\n    StyledName,\n    StyledCardFooter,\n} from \"./style\";\n\ninterface IProps {\n    image: string;\n    title: string;\n    date: string;\n    place: string;\n    location: string;\n    people: string;\n    path: string;\n}\n\nconst EventCard = ({\n    image,\n    title,\n    date,\n    place,\n    location,\n    people,\n    path,\n}: IProps) => {\n    return (\n        <StyledCard>\n            <CardImage src={image} alt=\"card\" isTop />\n            <StyledCardBody>\n                <StyledName>\n                    <Anchor path={path} variant=\"link2\">\n                        {title}\n                    </Anchor>\n                </StyledName>\n                <Text mb={0} color=\"text3\">\n                    {date}, {place}\n                </Text>\n                <Text as=\"span\" color=\"text3\">\n                    {location}\n                </Text>\n            </StyledCardBody>\n            <StyledCardFooter>\n                <Text as=\"span\" color=\"text3\">\n                    {people} people interested\n                </Text>\n                <Button size=\"xs\" color=\"secondary\">\n                    Interested\n                </Button>\n            </StyledCardFooter>\n        </StyledCard>\n    );\n};\n\nexport default EventCard;\n","import { Row, Col } from \"@doar/components\";\nimport image1 from \"@doar/shared/images/img27.jpg\";\nimport image2 from \"@doar/shared/images/img26.jpg\";\nimport image3 from \"@doar/shared/images/img28.jpg\";\nimport image4 from \"@doar/shared/images/img29.jpg\";\nimport image5 from \"@doar/shared/images/img31.jpg\";\nimport EventCard from \"../../../components/event-card\";\n\nconst MainContent = () => {\n    return (\n        <Col lg={8} xl={9}>\n            <Row gutters={20}>\n                <Col md={6}>\n                    <EventCard\n                        image={image1}\n                        title=\"Moto Rally Championship\"\n                        date=\"Mar 22 - Mar 24\"\n                        place=\"World Trade Center Metro\"\n                        path=\"#!\"\n                        location=\"Manila, Philippines\"\n                        people=\"6,187\"\n                    />\n                </Col>\n                <Col md={6} mt={[\"20px\", null, 0]}>\n                    <EventCard\n                        image={image2}\n                        title=\"Reggae Music Showdown\"\n                        date=\"Mar 30 - Mar 31\"\n                        place=\"Cebu Business Park\"\n                        path=\"#!\"\n                        location=\"Cebu City, Cebu, Philippines\"\n                        people=\"5,092\"\n                    />\n                </Col>\n                <Col md={6} mt=\"20px\">\n                    <EventCard\n                        image={image3}\n                        title=\"Acoustic Workshop\"\n                        date=\"Apr 10 - Apr 12\"\n                        place=\"Cebu IT Park\"\n                        path=\"#!\"\n                        location=\"Cebu City, Cebu, Philippines\"\n                        people=\"5,001\"\n                    />\n                </Col>\n                <Col md={6} mt=\"20px\">\n                    <EventCard\n                        image={image4}\n                        title=\"Photoshop Effects Workshop\"\n                        date=\"Apr 12 - Apr 13\"\n                        place=\"2nd Fl. Westfield Building\"\n                        path=\"#!\"\n                        location=\"Bay Area, San Francisco, CA\"\n                        people=\"4,343\"\n                    />\n                </Col>\n                <Col md={6} mt=\"20px\">\n                    <EventCard\n                        image={image5}\n                        title=\"Annual Dog Showdown\"\n                        date=\"Apr 15, 8:00am - 05:00pm\"\n                        place=\"Fishermans Wharf\"\n                        path=\"#!\"\n                        location=\"Bay Area, San Francisco, CA\"\n                        people=\"4,343\"\n                    />\n                </Col>\n            </Row>\n        </Col>\n    );\n};\n\nexport default MainContent;\n","import styled, { themeGet, color, ColorProps } from \"@doar/shared/styled\";\n\nexport const StyledIcon = styled(({ bg, ...rest }) => (\n    <div {...rest} />\n))<ColorProps>`\n    width: 40px;\n    height: 40px;\n    color: #fff;\n    align-items: center;\n    justify-content: center;\n    display: flex;\n    border-radius: ${themeGet(\"radii.rounded\")};\n    ${color}\n`;\n\nexport const StyledName = styled.p`\n    font-weight: 500;\n    margin-bottom: 0px;\n`;\n\nexport const StyledSpan = styled.span`\n    font-size: 13px;\n    color: ${themeGet(\"colors.text3\")};\n`;\n","import { Calendar } from \"react-feather\";\nimport { Media, MediaBody, Anchor } from \"@doar/components\";\nimport WidgetTitle from \"../widget-title\";\nimport { StyledName, StyledSpan, StyledIcon } from \"./style\";\n\nconst PopularGroups = () => {\n    return (\n        <>\n            <WidgetTitle title=\"Popular Groups\" />\n            <Media as=\"ul\" mb=\"15px\">\n                <Media as=\"li\" alignItems=\"center\">\n                    <StyledIcon bg=\"dark\">\n                        <Calendar width={24} height={24} />\n                    </StyledIcon>\n                    <MediaBody ml=\"15px\">\n                        <StyledName>\n                            <Anchor path=\"#!\" color=\"text\">\n                                My 32th Birthday\n                            </Anchor>\n                        </StyledName>\n                        <StyledSpan>Today, April 21, 5:00pm</StyledSpan>\n                    </MediaBody>\n                </Media>\n                <Media as=\"li\" alignItems=\"center\" mt=\"15px\">\n                    <StyledIcon bg=\"indigo\">\n                        <Calendar width={24} height={24} />\n                    </StyledIcon>\n                    <MediaBody ml=\"15px\">\n                        <StyledName>\n                            <Anchor path=\"#!\" color=\"text\">\n                                Dribbble Meetup\n                            </Anchor>\n                        </StyledName>\n                        <StyledSpan>Tomorrow, April 22, 3:00pm</StyledSpan>\n                    </MediaBody>\n                </Media>\n            </Media>\n        </>\n    );\n};\n\nexport default PopularGroups;\n","import { Badge, Nav, NavLink } from \"@doar/components\";\nimport WidgetTitle from \"../widget-title\";\n\nconst EventsByLocation = () => {\n    return (\n        <>\n            <WidgetTitle title=\"Events By Location\" />\n            <Nav customStyle=\"classic\">\n                <NavLink path=\"#!\">\n                    <span>San Francisco, California</span>\n                    <Badge variant=\"texted\">20</Badge>\n                </NavLink>\n                <NavLink path=\"#!\">\n                    <span>Los Angeles, California</span>\n                    <Badge variant=\"texted\">18</Badge>\n                </NavLink>\n                <NavLink path=\"#!\">\n                    <span>Las Vegas, Nevada</span>\n                    <Badge variant=\"texted\">14</Badge>\n                </NavLink>\n                <NavLink path=\"#!\">\n                    <span>Austin, Texas</span>\n                    <Badge variant=\"texted\">12</Badge>\n                </NavLink>\n                <NavLink path=\"#!\">\n                    <span>Arlington, Nebraska</span>\n                    <Badge variant=\"texted\">10</Badge>\n                </NavLink>\n            </Nav>\n        </>\n    );\n};\n\nexport default EventsByLocation;\n","import styled from \"@doar/shared/styled\";\n\nexport const StyledWrap = styled.div`\n    &:not(:last-of-type) {\n        margin-bottom: 50px;\n    }\n`;\n","import { Col } from \"@doar/components\";\nimport UpcomingEvents from \"../../../components/widgets/upcoming-events\";\nimport EventsByLocation from \"../../../components/widgets/events-by-location\";\nimport { StyledWrap } from \"./style\";\n\nconst Sidebar = () => {\n    return (\n        <Col sm={7} md={5} lg={4} xl={3} mt={[\"40px\", null, null, \"0px\"]}>\n            <StyledWrap>\n                <UpcomingEvents />\n            </StyledWrap>\n            <StyledWrap>\n                <EventsByLocation />\n            </StyledWrap>\n        </Col>\n    );\n};\n\nexport default Sidebar;\n","import { Row } from \"@doar/components\";\nimport Content from \"../layouts/content\";\nimport PageHeader from \"../components/page-header\";\nimport MainContent from \"../containers/events/main\";\nimport Sidebar from \"../containers/events/sidebar\";\nimport SEO from \"../components/seo\";\n\nconst Events = () => {\n    return (\n        <>\n            <SEO />\n            <Content borderBottomWidth=\"1px\">\n                <PageHeader\n                    prev={[\n                        { text: \"Profile\", link: \"/profile-view\" },\n                        { text: \"Discover\", link: \"/\" },\n                    ]}\n                    title=\"Events\"\n                    wcText=\"Discover Events\"\n                />\n            </Content>\n            <Content mt={[null, null, null, \"0px\"]}>\n                <Row>\n                    <MainContent />\n                    <Sidebar />\n                </Row>\n            </Content>\n        </>\n    );\n};\n\nexport default Events;\n"],"names":["children","className","restProps","classnames","as","$el","StyledMedia","styled","m","ml","mr","mt","mb","display","alignItems","props","css","layout","space","flexbox","StyledMediaBody","width","$alignMent","px","StyledCard","rest","StyledCardBody","themeGet","device","StyledCardFooter","StyledName","image","title","date","place","location","people","path","src","alt","isTop","variant","color","size","lg","xl","gutters","md","image1","image2","image3","image4","image5","StyledIcon","bg","StyledSpan","height","customStyle","StyledWrap","sm","borderBottomWidth","prev","text","link","wcText"],"sourceRoot":""}