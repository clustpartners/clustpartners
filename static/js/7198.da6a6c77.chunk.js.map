{"version":3,"file":"static/js/7198.da6a6c77.chunk.js","mappings":"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","sources":["../../components/src/ui/heading/style.tsx","../../components/src/ui/heading/index.tsx","../../components/src/ui/image/image.tsx","../../components/src/ui/image/style.tsx","components/widgets/people-may-know/style.tsx","components/widgets/people-may-know/index.tsx","components/widgets/people-viewed/style.tsx","components/widgets/people-viewed/index.tsx","components/widgets/stories/style.tsx","components/widgets/stories/index.tsx","components/widgets/widget-title/style.tsx","components/widgets/widget-title/index.tsx","../../components/src/grid/container.tsx","layouts/content/style.tsx","layouts/content/index.tsx"],"sourcesContent":["import styled, {\n    ColorProps,\n    SpaceProps,\n    TypographyProps,\n    color as colorStyles,\n    css,\n    space,\n    typography,\n} from '@doar/shared/styled';\n\ninterface IProps extends SpaceProps, ColorProps, TypographyProps {\n    $tt?: string;\n}\n\nconst props = [\n    'p',\n    'px',\n    'py',\n    'pt',\n    'pb',\n    'pl',\n    'pr',\n    'm',\n    'mx',\n    'my',\n    'mt',\n    'mb',\n    'ml',\n    'mr',\n    'color',\n    'fontFamily',\n    'fontSize',\n    'fontWeight',\n    'lineHeight',\n    'letterSpacing',\n    'textAlign',\n];\n\nexport const StyledHeading = styled('h6').withConfig({\n    shouldForwardProp: (prop, defaultValidatorFn) => ![...props].includes(prop) && defaultValidatorFn(prop),\n})<IProps>`\n    ${({ $tt }) =>\n        $tt &&\n        css`\n            text-transform: ${$tt};\n        `}\n    ${space};\n    ${colorStyles};\n    ${typography};\n`;\n","import { ElementType, forwardRef } from \"react\";\nimport { SpaceProps, ColorProps, TypographyProps } from \"@doar/shared/styled\";\nimport { StyledHeading } from \"./style\";\n\ninterface IProps extends SpaceProps, ColorProps, TypographyProps {\n    children: React.ReactNode;\n    as?: ElementType;\n    className?: string;\n    tt?: string;\n}\n\nconst Heading = forwardRef<HTMLHeadingElement, IProps>(\n    ({ as, className, tt, children, ...restProps }, ref) => {\n        return (\n            <StyledHeading\n                as={as}\n                className={className}\n                $tt={tt}\n                ref={ref}\n                {...restProps}\n            >\n                {children}\n            </StyledHeading>\n        );\n    }\n);\n\nHeading.displayName = \"Heading\";\n\nexport default Heading;\n","import classnames from \"clsx\";\nimport { SpaceProps, LayoutProps } from \"@doar/shared/styled\";\nimport { StyledImage } from \"./style\";\n\nexport interface ImageProps extends SpaceProps, LayoutProps {\n    /**\n     * image's source.\n     */\n    src: string;\n    /**\n     * image's alt text.\n     */\n    alt?: string;\n    /**\n     * image's shapes\n     */\n    shape?: \"rounded\" | \"circle\" | \"thumbnail\";\n\n    /**\n     *Use the `fluid` to scale image nicely to the parent element.\n     */\n    fluid?: boolean;\n    /**\n     *Use the `align` to align image.\n     */\n    align?: \"left\" | \"right\";\n    /**\n     *Use the `fit` to resized to fit image's container.\n     */\n    fit?: \"cover\" | \"contain\";\n    /**\n     * Optional. Extra Class Name\n     */\n    className?: string;\n}\n\nconst Image = ({\n    src,\n    alt,\n    size,\n    shape,\n    fluid,\n    align,\n    fit,\n    className,\n    ...restProps\n}: ImageProps) => {\n    return (\n        <StyledImage\n            src={src}\n            alt={alt}\n            $shape={shape}\n            $size={size}\n            $fluid={fluid}\n            $align={align}\n            $fit={fit}\n            className={classnames(className)}\n            {...restProps}\n        />\n    );\n};\n\nexport default Image;\n","import styled, {\n    FlexboxProps,\n    LayoutProps,\n    SpaceProps,\n    css,\n    device,\n    flexbox,\n    layout,\n    space,\n    themeGet,\n} from '@doar/shared/styled';\n\ninterface ImageProps extends SpaceProps, LayoutProps {\n    $shape?: 'rounded' | 'circle' | 'thumbnail';\n    $fluid?: boolean;\n    $align?: 'left' | 'right';\n    $fit?: 'cover' | 'contain';\n}\n\nconst imageCss = css<ImageProps>`\n    max-width: 100%;\n    ${({ $shape }) =>\n        $shape === 'rounded' &&\n        css`\n            border-radius: ${themeGet('radii.rounded')};\n        `}\n    ${({ $shape }) =>\n        $shape === 'circle' &&\n        css`\n            border-radius: ${themeGet('radii.circle')};\n        `}\n\t${({ $shape }) =>\n        $shape === 'thumbnail' &&\n        css`\n            padding: 0.25rem;\n            background-color: transparent;\n            border: 1px solid ${themeGet('colors.text4')};\n            border-radius: ${themeGet('radii.rounded')};\n        `}\n\t${({ $fluid }) =>\n        $fluid &&\n        css`\n            height: auto;\n        `}\n\t${({ $align }) =>\n        $align === 'left' &&\n        css`\n            float: left;\n        `}\n\t${({ $align }) =>\n        $align === 'right' &&\n        css`\n            float: right;\n        `}\n\t\n\t${({ $fit }) =>\n        $fit === 'cover' &&\n        css`\n            width: 100%;\n            height: 100%;\n            object-fit: cover;\n        `}\n\t${({ $fit }) =>\n        $fit === 'contain' &&\n        css`\n            width: 100%;\n            height: 100%;\n            object-fit: contain;\n        `}\n    ${space};\n    ${layout};\n`;\n\nexport const StyledImage = styled(\n    ({ m, mx, my, ml, mr, mt, mb, maxWidth, maxHeight, width, height, display, ...rest }) => <img {...rest} />\n)<ImageProps>`\n    ${imageCss}\n`;\n\ninterface IGroup extends FlexboxProps, SpaceProps {\n    $size?: 'sm';\n}\n\nconst groupCss = css<IGroup>`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    img {\n        position: relative;\n        background-color: #fff;\n        ${device.small} {\n            padding: 3px;\n        }\n        ${props =>\n            props.theme.name === 'dark' &&\n            css`\n                background-color: ${themeGet('colors.gray900')};\n            `}\n    }\n    ${({ $size }) =>\n        (!$size || $size !== 'sm') &&\n        css`\n            img {\n                &:not(:first-of-type) {\n                    margin-left: -15px;\n                }\n                ${device.small} {\n                    &:not(:first-of-type) {\n                        margin-left: -25px;\n                    }\n                }\n            }\n        `}\n    ${({ $size }) =>\n        $size === 'sm' &&\n        css`\n            img {\n                &:not(:first-of-type) {\n                    margin-left: -15px;\n                }\n            }\n        `}\n    ${props =>\n        props.theme.name === 'dark' &&\n        css`\n            img {\n                background-color: ${themeGet('gray900')};\n            }\n        `}\n    ${flexbox};\n    ${space};\n`;\n\nexport const StyledGroup = styled(({ mb, alignItems, justifyContent, ...rest }) => <div {...rest} />)<IGroup>`\n    ${groupCss};\n`;\n","import styled, { themeGet } from \"@doar/shared/styled\";\n\nexport const StyledName = styled.p`\n    font-weight: 500;\n    margin-bottom: 0px;\n`;\n\nexport const StyledRole = styled.span`\n    font-size: 12px;\n    color: ${themeGet(\"colors.text3\")};\n`;\n","import { Media, MediaBody, Anchor, Avatar } from \"@doar/components\";\nimport image1 from \"@doar/shared/images/img21.jpg\";\nimport image2 from \"@doar/shared/images/img22.jpg\";\nimport image3 from \"@doar/shared/images/img23.jpg\";\nimport image4 from \"@doar/shared/images/img24.jpg\";\nimport WidgetTitle from \"../widget-title\";\nimport { StyledName, StyledRole } from \"./style\";\n\nconst PeopleMayKnow = () => {\n    return (\n        <>\n            <WidgetTitle title=\"People You May Know\" />\n            <Media as=\"ul\" mb=\"15px\">\n                <Media as=\"li\" alignItems=\"center\">\n                    <Anchor path=\"#!\">\n                        <Avatar>\n                            <img src={image1} alt=\"avatar\" />\n                        </Avatar>\n                    </Anchor>\n                    <MediaBody ml=\"15px\">\n                        <StyledName>\n                            <Anchor path=\"#!\" color=\"text\">\n                                Allan Ray Palban\n                            </Anchor>\n                        </StyledName>\n                        <StyledRole>Senior Business Analyst</StyledRole>\n                    </MediaBody>\n                </Media>\n                <Media as=\"li\" alignItems=\"center\" mt=\"15px\">\n                    <Anchor path=\"#!\">\n                        <Avatar>\n                            <img src={image2} alt=\"avatar\" />\n                        </Avatar>\n                    </Anchor>\n                    <MediaBody ml=\"15px\">\n                        <StyledName>\n                            <Anchor path=\"#!\" color=\"text\">\n                                Rhea Castanares\n                            </Anchor>\n                        </StyledName>\n                        <StyledRole>Product Designer</StyledRole>\n                    </MediaBody>\n                </Media>\n                <Media as=\"li\" alignItems=\"center\" mt=\"15px\">\n                    <Anchor path=\"#!\">\n                        <Avatar>\n                            <img src={image3} alt=\"avatar\" />\n                        </Avatar>\n                    </Anchor>\n                    <MediaBody ml=\"15px\">\n                        <StyledName>\n                            <Anchor path=\"#!\" color=\"text\">\n                                Philip Cesar Galban\n                            </Anchor>\n                        </StyledName>\n                        <StyledRole>Executive Assistant</StyledRole>\n                    </MediaBody>\n                </Media>\n                <Media as=\"li\" alignItems=\"center\" mt=\"15px\">\n                    <Anchor path=\"#!\">\n                        <Avatar>\n                            <img src={image4} alt=\"avatar\" />\n                        </Avatar>\n                    </Anchor>\n                    <MediaBody ml=\"15px\">\n                        <StyledName>\n                            <Anchor path=\"#!\" color=\"text\">\n                                Randy Macapala\n                            </Anchor>\n                        </StyledName>\n                        <StyledRole>Business Entrepreneur</StyledRole>\n                    </MediaBody>\n                </Media>\n                <Media as=\"li\" alignItems=\"center\" mt=\"15px\">\n                    <Anchor path=\"#!\">\n                        <Avatar>\n                            <img src={image4} alt=\"avatar\" />\n                        </Avatar>\n                    </Anchor>\n                    <MediaBody ml=\"15px\">\n                        <StyledName>\n                            <Anchor path=\"#!\" color=\"text\">\n                                Abigail Johnson\n                            </Anchor>\n                        </StyledName>\n                        <StyledRole>System Administrator</StyledRole>\n                    </MediaBody>\n                </Media>\n            </Media>\n        </>\n    );\n};\n\nexport default PeopleMayKnow;\n","import styled, { themeGet } from \"@doar/shared/styled\";\n\nexport const StyledName = styled.p`\n    font-weight: 500;\n    margin-bottom: 0px;\n`;\n\nexport const StyledRole = styled.span`\n    font-size: 12px;\n    color: ${themeGet(\"colors.text3\")};\n`;\n","import {\n    Media,\n    MediaBody,\n    Anchor,\n    Avatar,\n    AvatarInitial,\n} from \"@doar/components\";\nimport image1 from \"@doar/shared/images/img6.jpg\";\nimport image2 from \"@doar/shared/images/img7.jpg\";\nimport WidgetTitle from \"../widget-title\";\nimport { StyledName, StyledRole } from \"./style\";\n\nconst PeopleViewd = () => {\n    return (\n        <>\n            <WidgetTitle title=\"People Also Viewed\" />\n            <Media as=\"ul\" mb=\"15px\">\n                <Media as=\"li\" alignItems=\"center\">\n                    <Anchor path=\"#!\">\n                        <Avatar status=\"online\">\n                            <img src={image1} alt=\"avatar\" />\n                        </Avatar>\n                    </Anchor>\n                    <MediaBody ml=\"15px\">\n                        <StyledName>\n                            <Anchor path=\"#!\" color=\"text\">\n                                Roy Recamadas\n                            </Anchor>\n                        </StyledName>\n                        <StyledRole>UI/UX Designer &amp; Developer</StyledRole>\n                    </MediaBody>\n                </Media>\n                <Media as=\"li\" alignItems=\"center\" mt=\"15px\">\n                    <Anchor path=\"#!\">\n                        <Avatar status=\"offline\">\n                            <img src={image2} alt=\"avatar\" />\n                        </Avatar>\n                    </Anchor>\n                    <MediaBody ml=\"15px\">\n                        <StyledName>\n                            <Anchor path=\"#!\" color=\"text\">\n                                Raymart Serencio\n                            </Anchor>\n                        </StyledName>\n                        <StyledRole>Full-Stack Developer</StyledRole>\n                    </MediaBody>\n                </Media>\n                <Media as=\"li\" alignItems=\"center\" mt=\"15px\">\n                    <Anchor path=\"#!\">\n                        <Avatar status=\"offline\">\n                            <AvatarInitial bg=\"teal\">R</AvatarInitial>\n                        </Avatar>\n                    </Anchor>\n                    <MediaBody ml=\"15px\">\n                        <StyledName>\n                            <Anchor path=\"#!\" color=\"text\">\n                                Rolando Paloso Jr\n                            </Anchor>\n                        </StyledName>\n                        <StyledRole>Licensed Architect</StyledRole>\n                    </MediaBody>\n                </Media>\n                <Media as=\"li\" alignItems=\"center\" mt=\"15px\">\n                    <Anchor path=\"#!\">\n                        <Avatar status=\"online\">\n                            <AvatarInitial bg=\"indigo\">R</AvatarInitial>\n                        </Avatar>\n                    </Anchor>\n                    <MediaBody ml=\"15px\">\n                        <StyledName>\n                            <Anchor path=\"#!\" color=\"text\">\n                                Robert Restificar\n                            </Anchor>\n                        </StyledName>\n                        <StyledRole>Business Analyst</StyledRole>\n                    </MediaBody>\n                </Media>\n                <Media as=\"li\" alignItems=\"center\" mt=\"15px\">\n                    <Anchor path=\"#!\">\n                        <Avatar status=\"online\">\n                            <AvatarInitial bg=\"gray600\">A</AvatarInitial>\n                        </Avatar>\n                    </Anchor>\n                    <MediaBody ml=\"15px\">\n                        <StyledName>\n                            <Anchor path=\"#!\" color=\"text\">\n                                Archie Cantones\n                            </Anchor>\n                        </StyledName>\n                        <StyledRole>Senior Software Architect</StyledRole>\n                    </MediaBody>\n                </Media>\n            </Media>\n        </>\n    );\n};\n\nexport default PeopleViewd;\n","import styled, { themeGet } from \"@doar/shared/styled\";\n\nexport const StyledName = styled.p`\n    font-weight: 500;\n    margin-bottom: 0px;\n`;\n\nexport const StyledTime = styled.span`\n    font-size: 12px;\n    color: ${themeGet(\"colors.text3\")};\n`;\n","import {\n    Media,\n    MediaBody,\n    Anchor,\n    Avatar,\n    AvatarInitial,\n} from \"@doar/components\";\nimport image1 from \"@doar/shared/images/img8.jpg\";\nimport WidgetTitle from \"../widget-title\";\nimport { StyledName, StyledTime } from \"./style\";\n\nconst Stories = () => {\n    return (\n        <>\n            <WidgetTitle\n                title=\"Stories\"\n                link={{ text: \"Watch All\", path: \"#!\" }}\n            />\n            <Media as=\"ul\" mb=\"15px\">\n                <Media as=\"li\" alignItems=\"center\">\n                    <Anchor path=\"#!\">\n                        <Avatar status=\"online\">\n                            <AvatarInitial bg=\"gray50\">S</AvatarInitial>\n                        </Avatar>\n                    </Anchor>\n                    <MediaBody ml=\"15px\">\n                        <StyledName>\n                            <Anchor path=\"#!\" color=\"text\">\n                                Socrates Itumay\n                            </Anchor>\n                        </StyledName>\n                        <StyledTime>2 hours ago</StyledTime>\n                    </MediaBody>\n                </Media>\n                <Media as=\"li\" alignItems=\"center\" mt=\"15px\">\n                    <Anchor path=\"#!\">\n                        <Avatar status=\"online\">\n                            <AvatarInitial bg=\"primary\">I</AvatarInitial>\n                        </Avatar>\n                    </Anchor>\n                    <MediaBody ml=\"15px\">\n                        <StyledName>\n                            <Anchor path=\"#!\" color=\"text\">\n                                Isidore Dilao\n                            </Anchor>\n                        </StyledName>\n                        <StyledTime>5 hours ago</StyledTime>\n                    </MediaBody>\n                </Media>\n                <Media as=\"li\" alignItems=\"center\" mt=\"15px\">\n                    <Anchor path=\"#!\">\n                        <Avatar status=\"offline\">\n                            <img src={image1} alt=\"avatar\" />\n                        </Avatar>\n                    </Anchor>\n                    <MediaBody ml=\"15px\">\n                        <StyledName>\n                            <Anchor path=\"#!\" color=\"text\">\n                                Angeline Mercado\n                            </Anchor>\n                        </StyledName>\n                        <StyledTime>1 day ago</StyledTime>\n                    </MediaBody>\n                </Media>\n                <Media as=\"li\" alignItems=\"center\" mt=\"15px\">\n                    <Anchor path=\"#!\">\n                        <Avatar status=\"online\">\n                            <AvatarInitial bg=\"info\">K</AvatarInitial>\n                        </Avatar>\n                    </Anchor>\n                    <MediaBody ml=\"15px\">\n                        <StyledName>\n                            <Anchor path=\"#!\" color=\"text\">\n                                Kirby Avendula\n                            </Anchor>\n                        </StyledName>\n                        <StyledTime>2 days ago</StyledTime>\n                    </MediaBody>\n                </Media>\n                <Media as=\"li\" alignItems=\"center\" mt=\"15px\">\n                    <Anchor path=\"#!\">\n                        <Avatar status=\"online\">\n                            <AvatarInitial bg=\"gray50\">S</AvatarInitial>\n                        </Avatar>\n                    </Anchor>\n                    <MediaBody ml=\"15px\">\n                        <StyledName>\n                            <Anchor path=\"#!\" color=\"text\">\n                                Socrates Itumay\n                            </Anchor>\n                        </StyledName>\n                        <StyledTime>2 hours ago</StyledTime>\n                    </MediaBody>\n                </Media>\n            </Media>\n        </>\n    );\n};\n\nexport default Stories;\n","import styled from \"@doar/shared/styled\";\n\nexport const StyledWrap = styled.div`\n    margin-bottom: 20px;\n    align-items: center;\n    justify-content: space-between;\n    display: flex;\n`;\n\nexport const StyledTitle = styled.h6`\n    font-size: 13px;\n    text-transform: uppercase;\n    font-weight: 600;\n    margin-bottom: 0px;\n`;\n","import { Anchor } from \"@doar/components\";\nimport { StyledWrap, StyledTitle } from \"./style\";\n\ninterface IProps {\n    title: string;\n    link?: {\n        text: string;\n        path: string;\n    };\n}\n\nconst WidgetTitle = ({ title, link }: IProps) => {\n    return (\n        <StyledWrap>\n            <StyledTitle>{title}</StyledTitle>\n            {link && (\n                <Anchor path={link.path} color=\"text3\">\n                    {link.text}\n                </Anchor>\n            )}\n        </StyledWrap>\n    );\n};\n\nexport default WidgetTitle;\n","import { SpaceProps } from \"@doar/shared/styled\";\nimport { StyledContainer } from \"./style\";\n\ninterface IProps extends SpaceProps {\n    children: React.ReactNode;\n    className?: string;\n}\n\nconst Container = ({ className, ...props }: IProps) => {\n    return <StyledContainer className={className} {...props} />;\n};\n\nexport default Container;\n","import styled, {\n    device,\n    space,\n    border as borderStyle,\n    SpaceProps,\n    BorderProps,\n    css,\n    themeGet,\n} from \"@doar/shared/styled\";\n\ninterface IProps extends SpaceProps, BorderProps {\n    $fullHeight?: boolean;\n    $align: \"top\" | \"center\" | \"bottom\";\n}\n\nconst conentCSS = css<IProps>`\n    padding: 20px;\n    ${device.large} {\n        padding: 25px;\n        margin-top: 60px;\n    }\n    ${device.xlarge} {\n        padding: 30px;\n    }\n    ${({ $fullHeight }) =>\n        $fullHeight &&\n        css`\n            min-height: calc(100vh - 107px);\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n        `}\n\n    ${({ $align }) =>\n        $align &&\n        $align !== \"center\" &&\n        css`\n            & > .container {\n                flex: 1;\n            }\n        `}\n\t${({ borderBottom, borderBottomWidth }) =>\n        (borderBottom || borderBottomWidth) &&\n        css`\n            border-bottom-style: solid;\n            border-bottom-color: ${themeGet(\"colors.border\")};\n        `}\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            color: ${themeGet(\"colors.gray500\")};\n        `}\n    ${space};\n    ${borderStyle};\n`;\n\nexport const StyledContent = styled(\n    ({\n        p,\n        px,\n        py,\n        m,\n        mx,\n        my,\n        mt,\n        borderBottomWidth,\n        $fullHeight,\n        $align,\n        ...rest\n    }) => <div {...rest} />\n)<IProps>`\n    ${conentCSS}\n`;\n","import { SpaceProps, BorderProps } from \"@doar/shared/styled\";\nimport { Container } from \"@doar/components\";\nimport { StyledContent } from \"./style\";\n\ninterface IProps extends SpaceProps, BorderProps {\n    children: React.ReactNode;\n    className?: string;\n    fullHeight?: boolean;\n    align?: \"top\" | \"center\" | \"bottom\";\n}\n\nconst Content = ({\n    children,\n    className,\n    fullHeight,\n    align,\n    ...restProps\n}: IProps) => {\n    return (\n        <StyledContent\n            $fullHeight={fullHeight}\n            $align={align}\n            className={className}\n            {...restProps}\n        >\n            <Container className=\"container\" pl=\"0\" pr=\"0\">\n                {children}\n            </Container>\n        </StyledContent>\n    );\n};\n\nexport default Content;\n"],"names":["props","StyledHeading","styled","withConfig","shouldForwardProp","prop","defaultValidatorFn","includes","$tt","css","space","colorStyles","typography","Heading","forwardRef","ref","as","className","tt","children","restProps","displayName","src","alt","size","shape","fluid","align","fit","$shape","$size","$fluid","$align","$fit","classnames","imageCss","themeGet","layout","StyledImage","m","mx","my","ml","mr","mt","mb","maxWidth","maxHeight","width","height","display","rest","groupCss","device","theme","name","flexbox","StyledGroup","alignItems","justifyContent","StyledName","StyledRole","title","path","image1","color","image2","image3","image4","status","bg","StyledTime","link","text","StyledWrap","StyledTitle","conentCSS","$fullHeight","borderBottom","borderBottomWidth","borderStyle","StyledContent","p","px","py","fullHeight","pl","pr"],"sourceRoot":""}