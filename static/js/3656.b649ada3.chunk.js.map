{"version":3,"file":"static/js/3656.b649ada3.chunk.js","mappings":"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","sources":["../../components/src/ui/avatar/avatar-initial.tsx","../../components/src/ui/avatar/avatar.tsx","../../components/src/ui/avatar/style.tsx","../../components/src/ui/media/media-body.tsx","../../components/src/ui/media/media.tsx","../../components/src/ui/media/style.tsx"],"sourcesContent":["import classnames from \"clsx\";\nimport { ColorProps, TypographyProps } from \"@doar/shared/styled\";\nimport { StyledInitialText } from \"./style\";\n\ninterface IAvatarText extends ColorProps, TypographyProps {\n    children: React.ReactNode;\n    className?: string;\n    size?: \"default\" | \"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"xxl\";\n    shape?: \"circle\" | \"rounded\" | \"square\";\n}\n\nconst AvatarInitial = ({\n    children,\n    size,\n    shape,\n    className,\n    ...restProps\n}: IAvatarText) => {\n    return (\n        <StyledInitialText\n            $size={size}\n            $shape={shape}\n            className={classnames(className, \"avatar-initial\")}\n            {...restProps}\n        >\n            {children}\n        </StyledInitialText>\n    );\n};\n\nexport default AvatarInitial;\n","import { Children, isValidElement, FunctionComponent } from \"react\";\nimport classnames from \"clsx\";\nimport { LayoutProps, SpaceProps } from \"@doar/shared/styled\";\n\nimport { StyledAvatar } from \"./style\";\n\ninterface IAvatar extends LayoutProps, SpaceProps {\n    children: React.ReactNode;\n    /**\n     * Pass extra classes\n     */\n    className?: string;\n    /**\n     * Default size is `38x38`\n     */\n    size?: \"default\" | \"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"xxl\";\n    /**\n     * Default size is `square`\n     */\n    shape?: \"circle\" | \"rounded\" | \"square\";\n    /**\n     * An avatar can have a status indicator to indicate users availability.\n     */\n    status?: \"online\" | \"offline\";\n}\n\nconst Avatar = ({\n    size,\n    shape,\n    status,\n    className,\n    children,\n    ...restProps\n}: IAvatar) => {\n    const RenderChild = Children.map(children, (el) => {\n        if (!isValidElement(el)) return el;\n        const child = el;\n        if (child !== null) {\n            const childType = child.type as FunctionComponent;\n            const name = childType.displayName || childType.name;\n            if (name === \"AvatarInitial\") {\n                return (\n                    <child.type size={size} shape={shape} {...child.props} />\n                );\n            }\n            return <child.type {...child.props} />;\n        }\n        return null;\n    });\n    return (\n        <StyledAvatar\n            $size={size}\n            $shape={shape}\n            $status={status}\n            className={classnames(className, \"avatar\")}\n            {...restProps}\n        >\n            {RenderChild}\n        </StyledAvatar>\n    );\n};\n\nAvatar.defaultProps = {\n    size: \"default\",\n    shape: \"circle\",\n};\n\nexport default Avatar;\n","import styled, {\n    css,\n    themeGet,\n    layout,\n    space,\n    LayoutProps,\n    color as colorStyles,\n    ColorProps,\n    typography,\n    TypographyProps,\n    SpaceProps,\n    tinycolor,\n} from \"@doar/shared/styled\";\n\ninterface IProps extends LayoutProps, SpaceProps {\n    $size?: \"default\" | \"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"xxl\";\n    $shape?: \"circle\" | \"rounded\" | \"square\";\n    $initialText?: boolean;\n    $status?: \"online\" | \"offline\";\n}\n\nexport const StyledAvatar = styled(({ display, mr, ...rest }) => (\n    <div {...rest} />\n))<IProps>`\n    position: relative;\n    ${({ $size }) =>\n        ($size === \"default\" || !$size) &&\n        css`\n            width: 38px;\n            height: 38px;\n        `}\n\n    ${({ $size }) =>\n        $size === \"xs\" &&\n        css`\n            width: 26px;\n            height: 26px;\n        `}\n\n    ${({ $size }) =>\n        $size === \"sm\" &&\n        css`\n            width: 32px;\n            height: 32px;\n        `}\n\n    ${({ $size }) =>\n        $size === \"md\" &&\n        css`\n            width: 48px;\n            height: 48px;\n        `}\n\n    ${({ $size }) =>\n        $size === \"lg\" &&\n        css`\n            width: 64px;\n            height: 64px;\n        `}\n\n    ${({ $size }) =>\n        $size === \"xl\" &&\n        css`\n            width: 72px;\n            height: 72px;\n        `}\n    ${({ $size }) =>\n        $size === \"xxl\" &&\n        css`\n            width: 100px;\n            height: 100px;\n        `}\n\n    ${({ $shape }) =>\n        $shape === \"square\" &&\n        css`\n            border-radius: 0;\n            img,\n            .avatar-initial {\n                border-radius: 0;\n            }\n        `}\n\n    ${({ $shape }) =>\n        $shape === \"circle\" &&\n        css`\n            border-radius: ${themeGet(\"radii.circle\")};\n            img,\n            .avatar-initial {\n                border-radius: ${themeGet(\"radii.circle\")};\n            }\n        `}\n    \n    ${({ $shape }) =>\n        $shape === \"rounded\" &&\n        css`\n            border-radius: ${themeGet(\"radii.rounded\")};\n            img,\n            .avatar-initial {\n                border-radius: ${themeGet(\"radii.rounded\")};\n            }\n        `}\n    ${({ $status }) =>\n        ($status === \"online\" || $status === \"offline\") &&\n        css`\n            &:after {\n                content: \"\";\n                position: absolute;\n                right: 2px;\n                bottom: 2px;\n                border-radius: 100%;\n                box-shadow: 0 0 0 2px #fff;\n            }\n        `}\n    ${({ $status }) =>\n        $status === \"online\" &&\n        css`\n            &:after {\n                background-color: ${themeGet(\"colors.success\")};\n            }\n        `}\n    ${({ $status }) =>\n        $status === \"offline\" &&\n        css`\n            &:after {\n                background-color: ${themeGet(\"colors.text4\")};\n                ${(props) =>\n                    props.theme.name === \"dark\" &&\n                    css`\n                        background-color: ${themeGet(\"colors.gray500\")};\n                    `}\n            }\n        `}\n    \n    ${({ $size, $status }) =>\n        $size === \"xs\" &&\n        Boolean($status) &&\n        css`\n            &:after {\n                width: 5px;\n                height: 5px;\n            }\n        `}\n\n    ${({ $size, $status }) =>\n        $size === \"sm\" &&\n        Boolean($status) &&\n        css`\n            &:after {\n                width: 7px;\n                height: 7px;\n            }\n        `}\n\n\t${({ $size, $status }) =>\n        ($size === \"default\" || !$size) &&\n        Boolean($status) &&\n        css`\n            &:after {\n                width: 7px;\n                height: 7px;\n            }\n        `}\n\n\t${({ $size, $status }) =>\n        $size === \"md\" &&\n        Boolean($status) &&\n        css`\n            &:after {\n                width: 9px;\n                height: 9px;\n            }\n        `}\n\t\t\n\n    ${({ $size, $status }) =>\n        $size === \"lg\" &&\n        Boolean($status) &&\n        css`\n            &:after {\n                width: 10px;\n                height: 10px;\n            }\n        `}\n\n\t${({ $size, $status, $shape }) =>\n        $size === \"lg\" &&\n        Boolean($status) &&\n        $shape === \"circle\" &&\n        css`\n            &:after {\n                bottom: 3px;\n                right: 4px;\n            }\n        `}\n\n    ${({ $size, $status }) =>\n        $size === \"xl\" &&\n        Boolean($status) &&\n        css`\n            &:after {\n                width: 11px;\n                height: 11px;\n                box-shadow: 0 0 0 2.5px #fff;\n            }\n        `}\n\n\t${({ $size, $status, $shape }) =>\n        $size === \"xl\" &&\n        Boolean($status) &&\n        $shape === \"circle\" &&\n        css`\n            &:after {\n                bottom: 4px;\n                right: 5px;\n            }\n        `}\n\n\t${({ $size, $status }) =>\n        $size === \"xxl\" &&\n        Boolean($status) &&\n        css`\n            &:after {\n                width: 13px;\n                height: 13px;\n                box-shadow: 0 0 0 2.5px #fff;\n            }\n        `}\n\n\t${({ $size, $status, $shape }) =>\n        $size === \"xxl\" &&\n        Boolean($status) &&\n        $shape === \"circle\" &&\n        css`\n            &:after {\n                bottom: 6px;\n                right: 7px;\n            }\n        `}\n\n    img {\n        width: 100%;\n        height: 100%;\n        object-fit: cover;\n    }\n\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        (props.$status === \"online\" || props.$status === \"offline\") &&\n        css`\n            &:after {\n                box-shadow: 0 0 0 1.5px\n                    ${tinycolor(themeGet(\"colors.gray900\")(props) as string)\n                        .darken(5)\n                        .toString()};\n            }\n        `}\n\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        (props.$size === \"xxl\" || props.$size === \"xl\") &&\n        Boolean(props.$status) &&\n        css`\n            &:after {\n                box-shadow: 0 0 0 2.5px\n                    ${tinycolor(themeGet(\"colors.gray900\")(props) as string)\n                        .darken(5)\n                        .toString()};\n            }\n        `}\n\n    ${layout};\n    ${space};\n`;\n\ninterface IAvatarText extends ColorProps, TypographyProps {\n    $size?: \"default\" | \"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"xxl\";\n}\n\nexport const StyledInitialText = styled(\n    ({ color, bg, opacity, fontWeight, ...rest }) => <span {...rest} />\n)<IAvatarText>`\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: ${themeGet(\"colors.text3\")};\n    color: #fff;\n    font-weight: 700;\n    font-size: 15px;\n    text-transform: uppercase;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 100%;\n    line-height: 100%;\n    font-family: ${themeGet(\"fonts.interUi\")};\n    ${({ $size }) =>\n        $size === \"xs\" &&\n        css`\n            font-size: 10px;\n        `}\n    ${({ $size }) =>\n        $size === \"sm\" &&\n        css`\n            font-size: 13px;\n        `}\n        ${({ $size }) =>\n        $size === \"md\" &&\n        css`\n            font-size: 18px;\n        `}\n        ${({ $size }) =>\n        $size === \"lg\" &&\n        css`\n            font-size: 24px;\n        `}\n        ${({ $size }) =>\n        $size === \"xl\" &&\n        css`\n            font-size: 30px;\n        `}\n        ${({ $size }) =>\n        $size === \"xxl\" &&\n        css`\n            font-size: 45px;\n        `}\n        ${({ $shape }) =>\n        $shape === \"square\" &&\n        css`\n            border-radius: 0;\n        `}\n        ${({ $shape }) =>\n        $shape === \"circle\" &&\n        css`\n            border-radius: ${themeGet(\"radii.circle\")};\n        `}\n        ${({ $shape }) =>\n        $shape === \"rounded\" &&\n        css`\n            border-radius: ${themeGet(\"radii.rounded\")};\n        `}\n    ${colorStyles};\n    ${typography};\n`;\n","import classnames from \"clsx\";\nimport { SpaceProps } from \"@doar/shared/styled\";\nimport { StyledMediaBody } from \"./style\";\n\ninterface IMediaBodyProps extends SpaceProps {\n    className?: string;\n    children: React.ReactNode;\n}\n\nconst MediaBody = ({ children, className, ...restProps }: IMediaBodyProps) => {\n    return (\n        <StyledMediaBody\n            className={classnames(className, \"media-body\")}\n            {...restProps}\n        >\n            {children}\n        </StyledMediaBody>\n    );\n};\n\nexport default MediaBody;\n","import classnames from \"clsx\";\nimport { SpaceProps, FlexboxProps, LayoutProps } from \"@doar/shared/styled\";\nimport { StyledMedia } from \"./style\";\n\ninterface IMediaProps extends SpaceProps, FlexboxProps, LayoutProps {\n    as?: React.ElementType;\n    className?: string;\n    children: React.ReactNode;\n}\n\nconst Media = ({ children, as, className, ...restProps }: IMediaProps) => {\n    return (\n        <StyledMedia\n            className={classnames(className, \"media\")}\n            as={as}\n            $el={as}\n            {...restProps}\n        >\n            {children}\n        </StyledMedia>\n    );\n};\n\nexport default Media;\n","import styled, {\n    layout,\n    space,\n    flexbox,\n    css,\n    SpaceProps,\n    LayoutProps,\n    FlexboxProps,\n} from \"@doar/shared/styled\";\n\ninterface IMedia extends SpaceProps, FlexboxProps, LayoutProps {\n    $el: string;\n}\n\nexport const StyledMedia = styled(\n    ({ m, ml, mr, mt, mb, display, alignItems, $el, ...props }) => (\n        <div {...props} />\n    )\n)<IMedia>`\n    ${({ $el }) =>\n        $el !== \"ul\" &&\n        css`\n            display: flex;\n            align-items: flex-start;\n        `}\n    ${layout};\n    ${space};\n    ${flexbox};\n`;\n\ninterface IMediaLeft extends SpaceProps, LayoutProps {}\n\nexport const StyledMediaLeft = styled(({ width, mr, ml, ...props }) => (\n    <div {...props} />\n))<IMediaLeft>`\n    ${layout};\n    ${space};\n    ${(props) =>\n        props.$alignMent === \"middle\" &&\n        css`\n            align-self: center;\n        `}\n    ${(props) =>\n        props.$alignMent === \"end\" &&\n        css`\n            align-self: flex-end;\n        `}\n    img {\n        max-width: 100%;\n    }\n`;\n\nexport const StyledMediaBody = styled(\n    ({ width, m, mr, ml, mt, mb, px, ...props }) => <div {...props} />\n)<SpaceProps>`\n    ${space};\n    flex: 1;\n`;\n"],"names":["children","size","shape","className","restProps","$size","$shape","classnames","Avatar","status","RenderChild","Children","el","isValidElement","child","childType","type","displayName","name","props","$status","defaultProps","StyledAvatar","styled","display","mr","rest","css","themeGet","theme","Boolean","tinycolor","darken","toString","layout","space","StyledInitialText","color","bg","opacity","fontWeight","colorStyles","typography","as","$el","StyledMedia","m","ml","mt","mb","alignItems","flexbox","StyledMediaBody","width","$alignMent","px"],"sourceRoot":""}